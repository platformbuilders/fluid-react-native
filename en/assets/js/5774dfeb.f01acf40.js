"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7093],{1209:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"components/loading-indicator/loading-indicator","title":"LoadingIndicator","description":"O componente LoadingIndicator fornece uma maneira consistente de exibir indicadores de carregamento em sua aplica\xe7\xe3o, com suporte a diferentes variantes, tamanhos e cores.","source":"@site/docs/components/loading-indicator/loading-indicator.md","sourceDirName":"components/loading-indicator","slug":"/components/loading-indicator/","permalink":"/en/docs/components/loading-indicator/","draft":false,"unlisted":false,"editUrl":"https://github.com/platformbuilders/fluid-react-native/edit/master/website/docs/components/loading-indicator/loading-indicator.md","tags":[],"version":"current","frontMatter":{"id":"loading-indicator","title":"LoadingIndicator","sidebar_label":"LoadingIndicator"},"sidebar":"componentsSidebar","previous":{"title":"UploadPhoto","permalink":"/en/docs/components/upload-photo/"}}');var r=a(4848),o=a(8453);a(9030);const t={id:"loading-indicator",title:"LoadingIndicator",sidebar_label:"LoadingIndicator"},s=void 0,d={},c=[{value:"Importa\xe7\xe3o",id:"importa\xe7\xe3o",level:2},{value:"Uso B\xe1sico",id:"uso-b\xe1sico",level:2},{value:"Varia\xe7\xf5es",id:"varia\xe7\xf5es",level:2},{value:"Tamanhos",id:"tamanhos",level:3},{value:"Variantes",id:"variantes",level:3},{value:"Contraste",id:"contraste",level:3},{value:"Combinando Propriedades",id:"combinando-propriedades",level:3},{value:"Uso em Componentes",id:"uso-em-componentes",level:2},{value:"Dentro de Bot\xf5es",id:"dentro-de-bot\xf5es",level:3},{value:"Carregamento de Tela Inteira",id:"carregamento-de-tela-inteira",level:3},{value:"Acessibilidade",id:"acessibilidade",level:2},{value:"Exemplo com Acessibilidade Personalizada",id:"exemplo-com-acessibilidade-personalizada",level:3},{value:"Boas Pr\xe1ticas de Acessibilidade",id:"boas-pr\xe1ticas-de-acessibilidade",level:3},{value:"API",id:"api",level:2},{value:"Props",id:"props",level:3},{value:"Exemplo Completo",id:"exemplo-completo",level:2}];function l(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"O componente LoadingIndicator fornece uma maneira consistente de exibir indicadores de carregamento em sua aplica\xe7\xe3o, com suporte a diferentes variantes, tamanhos e cores."}),"\n",(0,r.jsx)(n.h2,{id:"importa\xe7\xe3o",children:"Importa\xe7\xe3o"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { LoadingIndicator } from '@platformbuilders/fluid-react-native';\n"})}),"\n",(0,r.jsx)(n.h2,{id:"uso-b\xe1sico",children:"Uso B\xe1sico"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport { View } from 'react-native';\nimport { LoadingIndicator } from '@platformbuilders/fluid-react-native';\n\nconst BasicLoadingExample = () => (\n  <View>\n    <LoadingIndicator />\n  </View>\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"varia\xe7\xf5es",children:"Varia\xe7\xf5es"}),"\n",(0,r.jsx)(n.h3,{id:"tamanhos",children:"Tamanhos"}),"\n",(0,r.jsxs)(n.p,{children:["O componente oferece dois tamanhos principais que podem ser definidos atrav\xe9s da propriedade ",(0,r.jsx)(n.code,{children:"large"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// Tamanho padr\xe3o (pequeno)\n<LoadingIndicator />\n\n// Tamanho grande\n<LoadingIndicator large />\n"})}),"\n",(0,r.jsx)(n.h3,{id:"variantes",children:"Variantes"}),"\n",(0,r.jsx)(n.p,{children:"O componente suporta diferentes variantes de anima\xe7\xe3o de carregamento:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Circular (padr\xe3o)\n<LoadingIndicator variant="circular" />\n\n// Linear\n<LoadingIndicator variant="linear" />\n\n// Button (\xfatil dentro de bot\xf5es)\n<LoadingIndicator variant="button" />\n'})}),"\n",(0,r.jsx)(n.h3,{id:"contraste",children:"Contraste"}),"\n",(0,r.jsxs)(n.p,{children:["Para melhor visualiza\xe7\xe3o em fundos escuros, voc\xea pode usar a propriedade ",(0,r.jsx)(n.code,{children:"contrast"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// Vers\xe3o padr\xe3o\n<LoadingIndicator />\n\n// Vers\xe3o com contraste para fundos escuros\n<LoadingIndicator contrast />\n"})}),"\n",(0,r.jsx)(n.h3,{id:"combinando-propriedades",children:"Combinando Propriedades"}),"\n",(0,r.jsx)(n.p,{children:"Voc\xea pode combinar diferentes propriedades para personalizar o indicador de carregamento de acordo com suas necessidades:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<LoadingIndicator\n  large\n  contrast\n  variant="linear"\n  accessibility="Carregando dados"\n/>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"uso-em-componentes",children:"Uso em Componentes"}),"\n",(0,r.jsx)(n.h3,{id:"dentro-de-bot\xf5es",children:"Dentro de Bot\xf5es"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import React, { useState } from 'react';\nimport { Button, LoadingIndicator } from '@platformbuilders/fluid-react-native';\n\nconst LoadingButtonExample = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const handlePress = () => {\n    setIsLoading(true);\n    // Simula uma opera\xe7\xe3o ass\xedncrona\n    setTimeout(() => setIsLoading(false), 2000);\n  };\n  \n  return (\n    <Button\n      title={isLoading ? '' : 'Salvar'}\n      onPress={handlePress}\n      disabled={isLoading}\n    >\n      {isLoading && <LoadingIndicator variant=\"button\" />}\n    </Button>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"carregamento-de-tela-inteira",children:"Carregamento de Tela Inteira"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { LoadingIndicator, Typography } from '@platformbuilders/fluid-react-native';\n\nconst FullScreenLoadingExample = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  \n  useEffect(() => {\n    // Simula carregamento de dados\n    const timer = setTimeout(() => setIsLoading(false), 3000);\n    return () => clearTimeout(timer);\n  }, []);\n  \n  if (isLoading) {\n    return (\n      <View style={styles.container}>\n        <LoadingIndicator large />\n        <Typography variant=\"h4\" style={styles.text}>\n          Carregando conte\xfado...\n        </Typography>\n      </View>\n    );\n  }\n  \n  return (\n    <View style={styles.container}>\n      <Typography variant=\"h3\">Conte\xfado Carregado!</Typography>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    marginTop: 16,\n  },\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"acessibilidade",children:"Acessibilidade"}),"\n",(0,r.jsx)(n.p,{children:"O componente LoadingIndicator implementa recursos de acessibilidade para melhorar a experi\xeancia de usu\xe1rios com defici\xeancias:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Utiliza ",(0,r.jsx)(n.code,{children:"accessibilityLabel"})," para descrever o prop\xf3sito do indicador de carregamento"]}),"\n",(0,r.jsx)(n.li,{children:'Por padr\xe3o, utiliza "Aguarde" como r\xf3tulo de acessibilidade se nenhum for fornecido'}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"exemplo-com-acessibilidade-personalizada",children:"Exemplo com Acessibilidade Personalizada"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<LoadingIndicator \n  accessibility="Carregando dados do perfil"\n  large\n/>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"boas-pr\xe1ticas-de-acessibilidade",children:"Boas Pr\xe1ticas de Acessibilidade"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Forne\xe7a contexto espec\xedfico"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Use labels que indiquem o que est\xe1 sendo carregado (ex: "Carregando lista de produtos")'}),"\n",(0,r.jsx)(n.li,{children:'Evite descri\xe7\xf5es gen\xe9ricas como "Carregando" ou "Aguarde"'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Combine com feedback textual"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Quando poss\xedvel, adicione texto explicativo junto ao indicador de carregamento"}),"\n",(0,r.jsx)(n.li,{children:"Isso ajuda usu\xe1rios a entender o que est\xe1 acontecendo, independente de poderem ver o indicador visual"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tempo de carregamento"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Se poss\xedvel, forne\xe7a uma estimativa de tempo ou progresso para opera\xe7\xf5es longas"}),"\n",(0,r.jsx)(n.li,{children:"Considere usar um indicador de progresso determinado para opera\xe7\xf5es de longa dura\xe7\xe3o"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,r.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Prop"}),(0,r.jsx)(n.th,{children:"Tipo"}),(0,r.jsx)(n.th,{children:"Padr\xe3o"}),(0,r.jsx)(n.th,{children:"Descri\xe7\xe3o"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"large"})}),(0,r.jsx)(n.td,{children:"boolean"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"Define se o indicador de carregamento deve ser exibido em tamanho grande"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"contrast"})}),(0,r.jsx)(n.td,{children:"boolean"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})}),(0,r.jsx)(n.td,{children:"Define se o indicador deve usar cores de contraste (\xfatil para fundos escuros)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"variant"})}),(0,r.jsx)(n.td,{children:"'circular' | 'button' | 'linear'"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'circular'"})}),(0,r.jsx)(n.td,{children:"Define o tipo de anima\xe7\xe3o de carregamento"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"accessibility"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'Aguarde'"})}),(0,r.jsx)(n.td,{children:"Texto para acessibilidade, lido por leitores de tela"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"exemplo-completo",children:"Exemplo Completo"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { LoadingIndicator, Button, Typography } from '@platformbuilders/fluid-react-native';\n\nconst LoadingExample = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [variant, setVariant] = useState('circular');\n  const [large, setLarge] = useState(false);\n  const [contrast, setContrast] = useState(false);\n  \n  const toggleLoading = () => {\n    setIsLoading(current => !current);\n  };\n  \n  const toggleSize = () => {\n    setLarge(current => !current);\n  };\n  \n  const toggleContrast = () => {\n    setContrast(current => !current);\n  };\n  \n  const cycleVariant = () => {\n    const variants = ['circular', 'button', 'linear'];\n    const currentIndex = variants.indexOf(variant);\n    const nextIndex = (currentIndex + 1) % variants.length;\n    setVariant(variants[nextIndex]);\n  };\n  \n  return (\n    <View style={styles.container}>\n      <View style={[styles.preview, contrast && styles.darkContainer]}>\n        {isLoading && (\n          <LoadingIndicator\n            large={large}\n            contrast={contrast}\n            variant={variant}\n            accessibility={`Carregando com variante ${variant}`}\n          />\n        )}\n      </View>\n      \n      <View style={styles.controls}>\n        <Button title={isLoading ? 'Parar' : 'Iniciar'} onPress={toggleLoading} />\n        <Button title={large ? 'Tamanho Normal' : 'Tamanho Grande'} onPress={toggleSize} />\n        <Button title={`Variante: ${variant}`} onPress={cycleVariant} />\n        <Button title={contrast ? 'Sem Contraste' : 'Com Contraste'} onPress={toggleContrast} />\n      </View>\n      \n      <Typography variant=\"p\" style={styles.text}>\n        {`Configura\xe7\xe3o atual: ${large ? 'Grande' : 'Normal'}, ${variant}, ${contrast ? 'Com contraste' : 'Sem contraste'}`}\n      </Typography>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 20,\n  },\n  preview: {\n    width: 200,\n    height: 200,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n    borderRadius: 10,\n  },\n  darkContainer: {\n    backgroundColor: '#333',\n  },\n  controls: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginBottom: 20,\n  },\n  text: {\n    textAlign: 'center',\n  },\n});\n\nexport default LoadingExample;\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>s});var i=a(6540);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);