{"version":3,"file":"static/js/async/579.js","sources":["./docs/components/forms/checkbox.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"components%2Fforms%2Fcheckbox.mdx\"] = {\"toc\":[{\"id\":\"importação\",\"text\":\"Importação\",\"depth\":2},{\"id\":\"uso-básico\",\"text\":\"Uso Básico\",\"depth\":2},{\"id\":\"variações\",\"text\":\"Variações\",\"depth\":2},{\"id\":\"estados\",\"text\":\"Estados\",\"depth\":3},{\"id\":\"com-mensagem-de-erro\",\"text\":\"Com Mensagem de Erro\",\"depth\":3},{\"id\":\"estilo-personalizado-do-label\",\"text\":\"Estilo Personalizado do Label\",\"depth\":3},{\"id\":\"uso-em-formulários\",\"text\":\"Uso em Formulários\",\"depth\":2},{\"id\":\"acessibilidade\",\"text\":\"Acessibilidade\",\"depth\":2},{\"id\":\"exemplo-com-acessibilidade\",\"text\":\"Exemplo com Acessibilidade\",\"depth\":3},{\"id\":\"boas-práticas-de-acessibilidade\",\"text\":\"Boas Práticas de Acessibilidade\",\"depth\":3},{\"id\":\"testids\",\"text\":\"TestIDs\",\"depth\":2},{\"id\":\"props\",\"text\":\"Props\",\"depth\":2}],\"title\":\"Checkbox\",\"frontmatter\":{}};\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\",\n    strong: \"strong\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"checkbox\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#checkbox\",\n        children: \"#\"\n      }), \"Checkbox\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"O componente Checkbox permite que o usuário selecione uma ou mais opções de um conjunto. É um controle de estado binário (ligado/desligado) que é usado em formulários ou para ativar e desativar funcionalidades.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"importação\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#importação\",\n        children: \"#\"\n      }), \"Importação\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        meta: \"\",\n        children: \"import { Checkbox } from '@platformbuilders/fluid-react-native';\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"uso-básico\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#uso-básico\",\n        children: \"#\"\n      }), \"Uso Básico\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        meta: \"\",\n        children: \"<Checkbox \\n  accessibility=\\\"termos-condicoes\\\"\\n  label=\\\"Aceito os termos e condições\\\"\\n  checked={false}\\n  onPress={() => setChecked(!checked)}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"variações\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#variações\",\n        children: \"#\"\n      }), \"Variações\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"estados\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#estados\",\n        children: \"#\"\n      }), \"Estados\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        meta: \"\",\n        children: \"// Desmarcado (padrão)\\n<Checkbox \\n  accessibility=\\\"opcao1\\\"\\n  label=\\\"Opção 1\\\" \\n  checked={false}\\n/>\\n\\n// Marcado\\n<Checkbox \\n  accessibility=\\\"opcao2\\\"\\n  label=\\\"Opção 2\\\" \\n  checked={true}\\n/>\\n\\n// Desabilitado\\n<Checkbox \\n  accessibility=\\\"opcao3\\\"\\n  label=\\\"Opção 3\\\" \\n  disabled={true}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"com-mensagem-de-erro\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#com-mensagem-de-erro\",\n        children: \"#\"\n      }), \"Com Mensagem de Erro\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        meta: \"\",\n        children: \"<Checkbox \\n  accessibility=\\\"opcao-obrigatoria\\\"\\n  label=\\\"Esta opção é obrigatória\\\" \\n  checked={false}\\n  error=\\\"Este campo é obrigatório\\\"\\n/>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"estilo-personalizado-do-label\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#estilo-personalizado-do-label\",\n        children: \"#\"\n      }), \"Estilo Personalizado do Label\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        meta: \"\",\n        children: \"<Checkbox \\n  accessibility=\\\"opcao-destaque\\\"\\n  label=\\\"Opção com Destaque\\\" \\n  labelStyle={{ \\n    color: '#FF5722', \\n    fontWeight: 'bold' \\n  }}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"uso-em-formulários\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#uso-em-formulários\",\n        children: \"#\"\n      }), \"Uso em Formulários\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"O Checkbox é comumente usado em formulários, especialmente com bibliotecas como Formik:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        meta: \"\",\n        children: \"import { Formik } from 'formik';\\nimport * as Yup from 'yup';\\nimport { View } from 'react-native';\\nimport { Checkbox, Button } from '@platformbuilders/fluid-react-native';\\n\\nconst validationSchema = Yup.object().shape({\\n  aceitaTermos: Yup.boolean().oneOf([true], 'Você deve aceitar os termos'),\\n  receberEmails: Yup.boolean(),\\n});\\n\\nconst FormularioExample = () => (\\n  <Formik\\n    initialValues={{ aceitaTermos: false, receberEmails: false }}\\n    validationSchema={validationSchema}\\n    onSubmit={values => console.log(values)}\\n  >\\n    {({ values, errors, touched, handleChange, handleSubmit, setFieldValue }) => (\\n      <View>\\n        <Checkbox \\n          accessibility=\\\"aceita-termos\\\"\\n          label=\\\"Aceito os termos e condições\\\" \\n          checked={values.aceitaTermos}\\n          error={touched.aceitaTermos && errors.aceitaTermos}\\n          onPress={() => setFieldValue('aceitaTermos', !values.aceitaTermos)}\\n        />\\n        \\n        <Checkbox \\n          accessibility=\\\"receber-emails\\\"\\n          label=\\\"Desejo receber emails promocionais\\\" \\n          checked={values.receberEmails}\\n          onPress={() => setFieldValue('receberEmails', !values.receberEmails)}\\n        />\\n        \\n        <Button onPress={handleSubmit}>\\n          Enviar\\n        </Button>\\n      </View>\\n    )}\\n  </Formik>\\n);\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"acessibilidade\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#acessibilidade\",\n        children: \"#\"\n      }), \"Acessibilidade\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"O componente Checkbox implementa as seguintes propriedades de acessibilidade:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"accessibilityLabel\"\n        }), \": Descrição do checkbox para leitores de tela\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"accessibilityRole\"\n        }), \": Definido automaticamente como \\\"checkbox\\\"\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"accessibilityState\"\n        }), \": Informa estados \\\"checked\\\" e \\\"disabled\\\"\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"accessibilityHint\"\n        }), \": Informa que tocar no checkbox vai marcá-lo ou desmarcá-lo\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"exemplo-com-acessibilidade\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#exemplo-com-acessibilidade\",\n        children: \"#\"\n      }), \"Exemplo com Acessibilidade\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        meta: \"\",\n        children: \"<Checkbox \\n  accessibility=\\\"notificacoes\\\"\\n  accessibilityLabel=\\\"Ativar notificações push\\\"\\n  label=\\\"Ativar notificações push\\\" \\n  checked={notificationsEnabled}\\n  onPress={() => toggleNotifications()}\\n/>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"boas-práticas-de-acessibilidade\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#boas-práticas-de-acessibilidade\",\n        children: \"#\"\n      }), \"Boas Práticas de Acessibilidade\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Labels descritivos\"\n          }), \":\"]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Use textos claros e específicos\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Evite frases negativas que possam confundir (ex: \\\"Não desabilitar notificações\\\")\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Mantenha o texto curto, mas informativo\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Agrupamento lógico\"\n          }), \":\"]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Agrupe checkboxes relacionados visualmente e semanticamente\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Use cabeçalhos (Typography) para descrever grupos de checkboxes\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Feedback tátil e visual claro\"\n          }), \":\"]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Garanta que o estado marcado/desmarcado seja visualmente óbvio\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Mantenha uma área de toque adequada (pelo menos 44x44dp)\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"testids\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#testids\",\n        children: \"#\"\n      }), \"TestIDs\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"O componente Checkbox segue um padrão consistente para geração de testIDs, facilitando a automação de testes:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        meta: \"\",\n        children: \"checkbox_{id}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Onde:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Se \", _jsx(_components.code, {\n          children: \"id\"\n        }), \" estiver definido, será usado \", _jsx(_components.code, {\n          children: \"checkbox_{id}\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Se apenas \", _jsx(_components.code, {\n          children: \"accessibility\"\n        }), \" estiver definido, será usado \", _jsx(_components.code, {\n          children: \"checkbox_{accessibility}\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Se apenas \", _jsx(_components.code, {\n          children: \"testID\"\n        }), \" estiver definido, será usado \", _jsx(_components.code, {\n          children: \"checkbox_{testID}\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Como último recurso, será usado \", _jsx(_components.code, {\n          children: \"checkbox_checkbox\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"props\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#props\",\n        children: \"#\"\n      }), \"Props\"]\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Prop\"\n          }), _jsx(_components.th, {\n            children: \"Tipo\"\n          }), _jsx(_components.th, {\n            children: \"Padrão\"\n          }), _jsx(_components.th, {\n            children: \"Descrição\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"id\"\n            })\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"-\"\n          }), _jsx(_components.td, {\n            children: \"ID do componente\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"testID\"\n            })\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"-\"\n          }), _jsx(_components.td, {\n            children: \"ID para testes\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"accessibility\"\n            })\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"-\"\n          }), _jsx(_components.td, {\n            children: \"ID para acessibilidade\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"accessibilityLabel\"\n            })\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"\\\"checkbox de [label]\\\"\"\n          }), _jsx(_components.td, {\n            children: \"Descrição para leitores de tela\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"checked\"\n            })\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"Se o checkbox está marcado\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"disabled\"\n            })\n          }), _jsx(_components.td, {\n            children: \"boolean\"\n          }), _jsx(_components.td, {\n            children: \"false\"\n          }), _jsx(_components.td, {\n            children: \"Se o checkbox está desabilitado\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"label\"\n            })\n          }), _jsx(_components.td, {\n            children: \"ReactElement | string\"\n          }), _jsx(_components.td, {\n            children: \"''\"\n          }), _jsx(_components.td, {\n            children: \"Texto ou componente a ser exibido ao lado do checkbox\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"error\"\n            })\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"''\"\n          }), _jsx(_components.td, {\n            children: \"Mensagem de erro a ser exibida\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"onPress\"\n            })\n          }), _jsx(_components.td, {\n            children: \"() => void\"\n          }), _jsx(_components.td, {\n            children: \"() => \"\n          }), _jsx(_components.td, {\n            children: \"Função chamada quando o checkbox é pressionado\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"labelStyle\"\n            })\n          }), _jsx(_components.td, {\n            children: \"StyleProp<TextStyle>\"\n          }), _jsx(_components.td, {\n            children: \"-\"\n          }), _jsx(_components.td, {\n            children: \"Estilo personalizado para o texto do label\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"checkBoxColor\"\n            })\n          }), _jsx(_components.td, {\n            children: \"string | number\"\n          }), _jsx(_components.td, {\n            children: \"-\"\n          }), _jsx(_components.td, {\n            children: \"Cor do checkbox (quando não marcado)\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"checkedCheckBoxColor\"\n            })\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"-\"\n          }), _jsx(_components.td, {\n            children: \"Cor do checkbox quando marcado\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: _jsx(_components.code, {\n              children: \"uncheckedCheckBoxColor\"\n            })\n          }), _jsx(_components.td, {\n            children: \"string\"\n          }), _jsx(_components.td, {\n            children: \"-\"\n          }), _jsx(_components.td, {\n            children: \"Cor do checkbox quando não marcado\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":[],"mappings}