[{"id":0,"title":"Button","routePath":"/components/button","lang":"","toc":[{"text":"Importação","id":"importação","depth":2,"charIndex":74},{"text":"Uso Básico","id":"uso-básico","depth":2,"charIndex":91},{"text":"Variações","id":"variações","depth":2,"charIndex":185},{"text":"Variantes de Estilo","id":"variantes-de-estilo","depth":3,"charIndex":198},{"text":"Estados","id":"estados","depth":3,"charIndex":332},{"text":"Com Ícones","id":"com-ícones","depth":3,"charIndex":415},{"text":"Acessibilidade","id":"acessibilidade","depth":2,"charIndex":497},{"text":"Exemplo com Acessibilidade Personalizada","id":"exemplo-com-acessibilidade-personalizada","depth":3,"charIndex":856},{"text":"Boas Práticas de Acessibilidade","id":"boas-práticas-de-acessibilidade","depth":3,"charIndex":916},{"text":"Props","id":"props","depth":2,"charIndex":1366}],"domain":"","content":"#\n\nO componente Button fornece um botão acessível para ações do usuário.\n\n\nImportação#\n\n\n\n\n\nUso Básico#\n\n console.log('Botão pressionado')}\n  accessibility=\"botao-salvar\"\n>\n  Salvar\n\n\n\n\nVariações#\n\n\nVariantes de Estilo#\n\n// Preenchido (padrão)\n\n  Botão Primário\n\n\n// Delineado\n\n  Botão Secundário\n\n\n// Texto plano\n\n  Botão Texto\n\n\n\n\nEstados#\n\n// Desabilitado\n\n  Botão Desabilitado\n\n\n// Carregando\n\n  Salvando...\n\n\n\n\nCom Ícones#\n\n// Ícone à esquerda\n\n  Adicionar\n\n\n// Ícone à direita\n\n  Próximo\n\n\n\n\nAcessibilidade#\n\nO componente Button implementa as seguintes propriedades de acessibilidade:\n\n * accessibilityLabel: Descrição do botão para leitores de tela\n * accessibilityRole: Definido como \"button\"\n * accessibilityState: Informa os estados \"disabled\" e \"busy\" (quando\n   loading=true)\n * accessibilityHint: Informa que o botão ativa ao ser pressionado\n\n\nExemplo com Acessibilidade Personalizada#\n\n\n  Finalizar\n\n\n\n\nBoas Práticas de Acessibilidade#\n\n 1. Labels descritivos:\n    \n    * Use textos claros e específicos\n    * Evite termos genéricos como \"Clique aqui\" ou \"OK\"\n\n 2. Estados visíveis:\n    \n    * Garanta que o estado desabilitado seja visualmente claro\n    * Forneça feedback visual durante o carregamento\n\n 3. Área de toque adequada:\n    \n    * O botão tem área de toque mínima de 44x44dp\n    * Considere botões maiores para alvos mais fáceis de tocar\n\n\nProps#\n\nPROP                 TIPO                                                           PADRÃO           DESCRIÇÃO\nid                   string                                                         -                ID do componente\naccessibility        string                                                         Obrigatório      ID para acessibilidade\naccessibilityLabel   string                                                         Texto do botão   Descrição do botão para leitores de tela\ntestID               string                                                         -                ID para testes\nchildren             ReactNode                                                      -                Conteúdo do botão\nonPress              function                                                       -                Função chamada ao pressionar o botão\ndisabled             boolean                                                        false            Se o botão está desabilitado\nloading              boolean                                                        false            Se o botão está em estado de carregamento\nvariant              'filled' | 'outline' | 'text'                                  'filled'         Variante de estilo do botão\ncolorVariant         'primary' | 'secondary' | 'success' | 'danger' | 'warning' |   'primary'        Variante de cor\n                     'info'\ntypographyVariant    'xs' | 'sm' | 'md' | 'lg' | 'xl'                               'md'             Tamanho da tipografia\nleftIconName         string                                                         -                Nome do ícone à esquerda\nrightIconName        string                                                         -                Nome do ícone à direita\ncontrast             boolean                                                        false            Aumentar contraste (para fundos escuros)\nrounded              boolean                                                        false            Se o botão deve ter cantos arredondados\nflat                 boolean                                                        false            Se o botão deve ser plano (sem sombra)\nminWidth             number | string                                                -                Largura mínima do botão\nmaxWidth             number | string                                                -                Largura máxima do botão\nstyle                ViewStyle                                                      -                Estilo customizado do botão\ntextStyle            TextStyle                                                      -                Estilo customizado do texto","frontmatter":{}},{"id":1,"title":"LoadingIndicator","routePath":"/components/feedback/loadingindicator","lang":"","toc":[{"text":"Importação","id":"importação","depth":2,"charIndex":140},{"text":"Exemplo Básico","id":"exemplo-básico","depth":2,"charIndex":157},{"text":"Exemplos","id":"exemplos","depth":2,"charIndex":178},{"text":"Com tamanho personalizado","id":"com-tamanho-personalizado","depth":3,"charIndex":190},{"text":"Com cor personalizada","id":"com-cor-personalizada","depth":3,"charIndex":226},{"text":"Com texto","id":"com-texto","depth":3,"charIndex":256},{"text":"Com animação de pulso","id":"com-animação-de-pulso","depth":3,"charIndex":274},{"text":"API","id":"api","depth":2,"charIndex":302},{"text":"Props","id":"props","depth":3,"charIndex":309},{"text":"Acessibilidade","id":"acessibilidade","depth":2,"charIndex":1583},{"text":"Boas Práticas","id":"boas-práticas","depth":2,"charIndex":2120}],"domain":"","content":"#\n\nO componente LoadingIndicator exibe um indicador de carregamento animado para\ninformar aos usuários que uma operação está em andamento.\n\n\nImportação#\n\n\n\n\n\nExemplo Básico#\n\n\n\n\n\nExemplos#\n\n\nCom tamanho personalizado#\n\n\n\n\n\n\n\n\n\nCom cor personalizada#\n\n\n\n\n\n\n\nCom texto#\n\n\n\n\n\n\n\nCom animação de pulso#\n\n\n\n\n\nAPI#\n\n\nProps#\n\nPROP                 TIPO                         PADRÃO         DESCRIÇÃO\nid                   string                       -              ID do componente\naccessibility        string                       -              ID para acessibilidade\naccessibilityLabel   string                       'Carregando'   Rótulo de acessibilidade\ntestID               string                       -              ID para testes\nsize                 'small' | 'large' | number   'small'        Tamanho do indicador\ncolor                string                       -              Cor do indicador\nuseTheme             boolean                      true           Se deve usar a cor do tema\ntext                 string                       -              Texto a ser exibido abaixo do indicador\ntextVariant          TypographyVariant            'md'           Variante do texto\ntextStyle            StyleProp                    -              Estilo customizado para o texto\npulseAnimation       boolean                      false          Se deve adicionar animação de pulso\ncontrast             boolean                      false          Se deve usar cores de alto contraste\nstyle                StyleProp                    -              Estilo customizado para o container\n\n\nAcessibilidade#\n\nO componente LoadingIndicator foi projetado com acessibilidade em mente:\n\n * Define automaticamente accessibilityRole=\"progressbar\" para indicar aos\n   leitores de tela que se trata de um indicador de progresso\n * Define accessibilityState={{ busy: true }} para informar que o aplicativo\n   está ocupado\n * Usa accessibilityLiveRegion=\"polite\" para que os leitores de tela anunciem\n   mudanças de estado\n * Permite customizar accessibilityLabel para fornecer um contexto mais\n   específico sobre o que está carregando\n\n\nBoas Práticas#\n\n * Use o LoadingIndicator para operações que levam mais de 1 segundo\n * Forneça feedback significativo para o usuário através da prop text\n * Use tamanhos apropriados para o contexto: small para indicadores inline ou\n   large para operações em tela cheia\n * Prefira cores que contrastem bem com o fundo para melhor visibilidade\n * Combine com feedback háptico para melhorar a experiência em dispositivos que\n   suportam\n * Evite múltiplos indicadores de carregamento na mesma tela","frontmatter":{}},{"id":2,"title":"Checkbox","routePath":"/components/forms/checkbox","lang":"","toc":[{"text":"Importação","id":"importação","depth":2,"charIndex":215},{"text":"Uso Básico","id":"uso-básico","depth":2,"charIndex":232},{"text":"Variações","id":"variações","depth":2,"charIndex":274},{"text":"Estados","id":"estados","depth":3,"charIndex":287},{"text":"Com Mensagem de Erro","id":"com-mensagem-de-erro","depth":3,"charIndex":355},{"text":"Estilo Personalizado do Label","id":"estilo-personalizado-do-label","depth":3,"charIndex":382},{"text":"Uso em Formulários","id":"uso-em-formulários","depth":2,"charIndex":418},{"text":"Acessibilidade","id":"acessibilidade","depth":2,"charIndex":1068},{"text":"Exemplo com Acessibilidade","id":"exemplo-com-acessibilidade","depth":3,"charIndex":1438},{"text":"Boas Práticas de Acessibilidade","id":"boas-práticas-de-acessibilidade","depth":3,"charIndex":1497},{"text":"TestIDs","id":"testids","depth":2,"charIndex":2078},{"text":"Props","id":"props","depth":2,"charIndex":2477}],"domain":"","content":"#\n\nO componente Checkbox permite que o usuário selecione uma ou mais opções de um\nconjunto. É um controle de estado binário (ligado/desligado) que é usado em\nformulários ou para ativar e desativar funcionalidades.\n\n\nImportação#\n\n\n\n\n\nUso Básico#\n\n setChecked(!checked)}\n/>\n\n\n\nVariações#\n\n\nEstados#\n\n// Desmarcado (padrão)\n\n\n// Marcado\n\n\n// Desabilitado\n\n\n\n\nCom Mensagem de Erro#\n\n\n\n\n\nEstilo Personalizado do Label#\n\n\n\n\n\nUso em Formulários#\n\nO Checkbox é comumente usado em formulários, especialmente com bibliotecas como\nFormik:\n\n\n\n\n\n\nconst validationSchema = Yup.object().shape({\n  aceitaTermos: Yup.boolean().oneOf([true], 'Você deve aceitar os termos'),\n  receberEmails: Yup.boolean(),\n});\n\nconst FormularioExample = () => (\n   console.log(values)}\n  >\n    {({ values, errors, touched, handleChange, handleSubmit, setFieldValue }) => (\n      \n         setFieldValue('aceitaTermos', !values.aceitaTermos)}\n        />\n        \n         setFieldValue('receberEmails', !values.receberEmails)}\n        />\n        \n        \n          Enviar\n        \n      \n    )}\n  \n);\n\n\n\nAcessibilidade#\n\nO componente Checkbox implementa as seguintes propriedades de acessibilidade:\n\n * accessibilityLabel: Descrição do checkbox para leitores de tela\n * accessibilityRole: Definido automaticamente como \"checkbox\"\n * accessibilityState: Informa estados \"checked\" e \"disabled\"\n * accessibilityHint: Informa que tocar no checkbox vai marcá-lo ou desmarcá-lo\n\n\nExemplo com Acessibilidade#\n\n toggleNotifications()}\n/>\n\n\n\nBoas Práticas de Acessibilidade#\n\n 1. Labels descritivos:\n    \n    * Use textos claros e específicos\n    * Evite frases negativas que possam confundir (ex: \"Não desabilitar\n      notificações\")\n    * Mantenha o texto curto, mas informativo\n\n 2. Agrupamento lógico:\n    \n    * Agrupe checkboxes relacionados visualmente e semanticamente\n    * Use cabeçalhos (Typography) para descrever grupos de checkboxes\n\n 3. Feedback tátil e visual claro:\n    \n    * Garanta que o estado marcado/desmarcado seja visualmente óbvio\n    * Mantenha uma área de toque adequada (pelo menos 44x44dp)\n\n\nTestIDs#\n\nO componente Checkbox segue um padrão consistente para geração de testIDs,\nfacilitando a automação de testes:\n\ncheckbox_{id}\n\n\nOnde:\n\n * Se id estiver definido, será usado checkbox_{id}\n * Se apenas accessibility estiver definido, será usado checkbox_{accessibility}\n * Se apenas testID estiver definido, será usado checkbox_{testID}\n * Como último recurso, será usado checkbox_checkbox\n\n\nProps#\n\nPROP                     TIPO                    PADRÃO                  DESCRIÇÃO\nid                       string                  -                       ID do componente\ntestID                   string                  -                       ID para testes\naccessibility            string                  -                       ID para acessibilidade\naccessibilityLabel       string                  \"checkbox de [label]\"   Descrição para leitores de tela\nchecked                  boolean                 false                   Se o checkbox está marcado\ndisabled                 boolean                 false                   Se o checkbox está desabilitado\nlabel                    ReactElement | string   ''                      Texto ou componente a ser exibido ao lado do checkbox\nerror                    string                  ''                      Mensagem de erro a ser exibida\nonPress                  () => void              () =>                   Função chamada quando o checkbox é pressionado\nlabelStyle               StyleProp               -                       Estilo personalizado para o texto do label\ncheckBoxColor            string | number         -                       Cor do checkbox (quando não marcado)\ncheckedCheckBoxColor     string                  -                       Cor do checkbox quando marcado\nuncheckedCheckBoxColor   string                  -                       Cor do checkbox quando não marcado","frontmatter":{}},{"id":3,"title":"TextInput","routePath":"/components/forms/textinput","lang":"","toc":[{"text":"Importação","id":"importação","depth":2,"charIndex":137},{"text":"Exemplo Básico","id":"exemplo-básico","depth":2,"charIndex":154},{"text":"Exemplos","id":"exemplos","depth":2,"charIndex":197},{"text":"Com ícone","id":"com-ícone","depth":3,"charIndex":209},{"text":"Com erro","id":"com-erro","depth":3,"charIndex":278},{"text":"Com bordas","id":"com-bordas","depth":3,"charIndex":333},{"text":"Com máscara","id":"com-máscara","depth":3,"charIndex":399},{"text":"Centralizado","id":"centralizado","depth":3,"charIndex":464},{"text":"Multiline","id":"multiline","depth":3,"charIndex":505},{"text":"API","id":"api","depth":2,"charIndex":543},{"text":"Props","id":"props","depth":3,"charIndex":550},{"text":"Componentes Relacionados","id":"componentes-relacionados","depth":2,"charIndex":4289},{"text":"PasswordInput","id":"passwordinput","depth":3,"charIndex":4317},{"text":"TextInputFloating","id":"textinputfloating","depth":3,"charIndex":4452},{"text":"Notas de uso","id":"notas-de-uso","depth":2,"charIndex":4584}],"domain":"","content":"#\n\nO componente TextInput é um campo de entrada de texto customizável com suporte a\ndiferentes variantes visuais, mascáras e validação.\n\n\nImportação#\n\n\n\n\n\nExemplo Básico#\n\n console.log(text)}\n/>\n\n\n\nExemplos#\n\n\nCom ícone#\n\n console.log(text)}\n  keyboardType=\"email-address\"\n/>\n\n\n\nCom erro#\n\n console.log(text)}\n  secureTextEntry\n/>\n\n\n\nCom bordas#\n\n console.log(text)}\n  keyboardType=\"phone-pad\"\n/>\n\n\n\nCom máscara#\n\n console.log(text)}\n  keyboardType=\"numeric\"\n/>\n\n\n\nCentralizado#\n\n console.log(text)}\n/>\n\n\n\nMultiline#\n\n console.log(text)}\n/>\n\n\n\nAPI#\n\n\nProps#\n\nPROP                 TIPO                     PADRÃO                  DESCRIÇÃO\nid                   string                   -                       ID do componente (obrigatório)\naccessibility        string                   -                       Identificador de acessibilidade (obrigatório)\naccessibilityLabel   string                   -                       Rótulo de acessibilidade\nlabel                string                   ''                      Texto de rótulo\nplaceholder          string                   ''                      Texto de placeholder\nvalue                string                   ''                      Valor do campo\nerror                string | boolean         ''                      Mensagem de erro ou flag\nonChangeText         (text: string) => void   -                       Callback para alteração de texto\nonBlur               (event) => void          () => {}                Callback para perda de foco\nonFocus              (event) => void          () => {}                Callback para ganho de foco\nleftIconName         string                   -                       Nome do ícone esquerdo\nrightIconName        string                   -                       Nome do ícone direito\nonPressIcon          () => void               -                       Callback para pressionar ícone esquerdo\nonRightIconPress     () => void               -                       Callback para pressionar ícone direito\niconColor            string                   -                       Cor dos ícones\niconSize             number                   -                       Tamanho dos ícones\niconType             IconFonts                IconFonts.FontAwesome   Tipo de fonte de ícones\nlarge                boolean                  false                   Se o input deve ser grande\ncontrast             boolean                  false                   Se deve usar contraste alto\ncentered             boolean                  false                   Se o texto deve ser centralizado\nwithBottomline       boolean                  true                    Se deve mostrar linha inferior\nmultiline            boolean                  false                   Se permite múltiplas linhas\nautoFocus            boolean                  false                   Se o input deve receber foco automaticamente\nkeyboardType         KeyboardTypeOptions      'default'               Tipo de teclado\nmaskType             string                   null                    Tipo de máscara (cpf, cnpj, phone, etc.)\nstatus               InputStatus              InputStatus.Default     Status visual do input\nborderedHeight       number                   -                       Altura da borda\nborderedColor        string                   -                       Cor da borda\nfocusBorderedColor   string                   -                       Cor da borda quando em foco\nborderedWidth        number                   1                       Largura da borda\nborderedRadius       number                   0                       Raio da borda\nborderedLabel        string                   ''                      Rótulo para versão com borda\nstyle                StyleProp                {}                      Estilo do componente\nerrorStyle           StyleProp                {}                      Estilo para mensagem de erro\ntextStyle            StyleProp                {}                      Estilo para o texto\nrootStyle            StyleProp                {}                      Estilo para o container raiz\nlabelStyle           StyleProp                {}                      Estilo para o rótulo\ninputRef             RefObject                -                       Ref para acessar o componente\n\n\nComponentes Relacionados#\n\n\nPasswordInput#\n\nUm componente especializado para campos de senha com toggle para mostrar/ocultar\no texto.\n\n\n\n console.log(text)}\n/>\n\n\n\nTextInputFloating#\n\nVariante com rótulo flutuante que se desloca para cima quando o campo recebe\nfoco.\n\n\n\n console.log(text)}\n/>\n\n\n\nNotas de uso#\n\n * Utilize o componente com máscara (maskType) para entradas formatadas como\n   CPF, CNPJ, telefone\n * A variante com bordas é ativada quando a prop borderedHeight é definida\n * Os estados visuais são controlados através da prop status (default, success,\n   error, disabled)\n * Para campos de senha, prefira usar o componente especializado PasswordInput","frontmatter":{}},{"id":4,"title":"Componentes","routePath":"/components/","lang":"","toc":[{"text":"Categorias de Componentes","id":"categorias-de-componentes","depth":2,"charIndex":139},{"text":"Elementos de UI Básicos","id":"elementos-de-ui-básicos","depth":3,"charIndex":168},{"text":"Navegação","id":"navegação","depth":3,"charIndex":239},{"text":"Formulários","id":"formulários","depth":3,"charIndex":288},{"text":"Feedback","id":"feedback","depth":3,"charIndex":371},{"text":"Mídia","id":"mídia","depth":3,"charIndex":447},{"text":"Acessibilidade","id":"acessibilidade","depth":2,"charIndex":484},{"text":"Personalização","id":"personalização","depth":2,"charIndex":754}],"domain":"","content":"#\n\nO Fluid React Native oferece uma ampla variedade de componentes para construir\ninterfaces de usuário móveis consistentes e acessíveis.\n\n\nCategorias de Componentes#\n\n\nElementos de UI Básicos#\n\n * Tipografia\n * Botões\n * Inputs\n * Cards\n\n\nNavegação#\n\n * TabBar\n * BottomSheet\n * Drawer\n\n\nFormulários#\n\n * TextInput\n * MaskedTextInput\n * Checkbox\n * Radio\n * DatePicker\n\n\nFeedback#\n\n * Toast\n * Modal\n * Alert\n * ProgressBar\n * ActivityIndicator\n\n\nMídia#\n\n * Avatar\n * Image\n * Icon\n\n\nAcessibilidade#\n\nTodos os componentes do Fluid React Native foram projetados com acessibilidade\nem mente, seguindo as diretrizes WCAG 2.1 e as melhores práticas para React\nNative.\n\nPara mais informações sobre acessibilidade, consulte a documentação de\nacessibilidade.\n\n\nPersonalização#\n\nO Fluid React Native permite personalizar a aparência dos componentes através do\nsistema de temas. Você pode criar temas personalizados ou estender o tema padrão\npara atender às necessidades de sua aplicação.\n\nPara mais informações sobre personalização, consulte a documentação de temas.","frontmatter":{}},{"id":5,"title":"Avatar","routePath":"/components/media/avatar","lang":"","toc":[{"text":"Importação","id":"importação","depth":2,"charIndex":183},{"text":"Uso Básico","id":"uso-básico","depth":2,"charIndex":200},{"text":"Variações","id":"variações","depth":2,"charIndex":217},{"text":"Com Imagem","id":"com-imagem","depth":3,"charIndex":230},{"text":"Com Monograma (Iniciais)","id":"com-monograma-iniciais","depth":3,"charIndex":283},{"text":"Com Upload de Imagem","id":"com-upload-de-imagem","depth":3,"charIndex":405},{"text":"Customizações Visuais","id":"customizações-visuais","depth":3,"charIndex":566},{"text":"Métodos e Referências","id":"métodos-e-referências","depth":2,"charIndex":654},{"text":"Métodos Disponíveis via Ref","id":"métodos-disponíveis-via-ref","depth":3,"charIndex":1226},{"text":"Acessibilidade","id":"acessibilidade","depth":2,"charIndex":1492},{"text":"Exemplo com Acessibilidade Personalizada","id":"exemplo-com-acessibilidade-personalizada","depth":3,"charIndex":1817},{"text":"Boas Práticas de Acessibilidade","id":"boas-práticas-de-acessibilidade","depth":3,"charIndex":1864},{"text":"Props","id":"props","depth":2,"charIndex":2174}],"domain":"","content":"#\n\nO componente Avatar exibe uma imagem de perfil do usuário, com suporte para\ncarregamento de imagens da galeria, monograma quando não há imagem, e várias\nopções de personalização.\n\n\nImportação#\n\n\n\n\n\nUso Básico#\n\n\n\n\n\nVariações#\n\n\nCom Imagem#\n\n// Imagem externa\n\n\n// Imagem local\n\n\n\n\nCom Monograma (Iniciais)#\n\nQuando não há imagem definida, o Avatar pode exibir um monograma com as iniciais\ndo nome:\n\n\n\n\n\nCom Upload de Imagem#\n\nconst handleUpload = (imageUri) => {\n  console.log('Imagem carregada:', imageUri);\n  // Salvar a imagem ou enviar para o servidor\n};\n\n\n\n\n\nCustomizações Visuais#\n\n// Personalização de borda\n\n\n// Personalização do monograma\n\n\n\n\nMétodos e Referências#\n\nO componente Avatar suporta o uso de referências (ref) para acessar métodos\ninternos:\n\n\n\n\nconst ProfileScreen = () => {\n  const avatarRef = useRef(null);\n  \n  const handleUploadPress = () => {\n    // Abre o seletor de imagens\n    avatarRef.current.openPicker();\n  };\n  \n  const handleClearPress = () => {\n    // Limpa a imagem carregada\n    avatarRef.current.clearUploadImage();\n  };\n  \n  return (\n    <>\n       console.log(uri)}\n      />\n      \n      \n        Selecionar Imagem\n      \n      \n      \n        Limpar Imagem\n      \n    </>\n  );\n};\n\n\n\nMétodos Disponíveis via Ref#\n\n * openPicker(): Abre o seletor de imagens da galeria\n * getUploadImage(): Retorna a URI da imagem atualmente carregada\n * clearUploadImage(): Limpa a imagem carregada\n * takePicture(): Se configurado com uma câmera, captura uma foto\n\n\nAcessibilidade#\n\nO componente Avatar implementa as seguintes propriedades de acessibilidade:\n\n * accessibilityLabel: Descrição do avatar para leitores de tela\n * accessibilityRole: Definido automaticamente como \"image\" ou \"button\" (quando\n   interativo)\n * accessibilityState: Informa o estado \"disabled\" quando apropriado\n\n\nExemplo com Acessibilidade Personalizada#\n\n\n\n\n\nBoas Práticas de Acessibilidade#\n\n 1. Labels descritivos:\n    \n    * Use descrições claras e específicas\n    * Inclua o nome da pessoa quando relevante\n\n 2. Área de toque adequada:\n    \n    * Use um tamanho mínimo de 44x44dp para avatares interativos\n    * Considere tamanhos maiores para melhor usabilidade\n\n\nProps#\n\nPROP                 TIPO                  PADRÃO                   DESCRIÇÃO\nid                   string                -                        ID do componente\naccessibility        string                'Upload de Avatar'       ID para acessibilidade\naccessibilityLabel   string                valor de accessibility   Descrição do avatar para leitores de tela\nimage                ImageSourcePropType   -                        Fonte da imagem (URI ou recurso local)\nanimatedLoading      boolean               true                     Se deve mostrar animação de carregamento\nsize                 number                50                       Tamanho do avatar em pixels\nimageQuality         number                0.5                      Qualidade da imagem ao fazer upload (0-1)\nborderWidth          number                2                        Largura da borda\nshowBorder           boolean               true                     Se deve mostrar borda\nborderColor          string                -                        Cor da borda (usa a cor primária do tema se não\n                                                                    especificada)\nonPress              function              -                        Função chamada ao pressionar o avatar\nonUpload             function              -                        Função chamada quando uma imagem é carregada pelo seletor\ndisplayMonogram      boolean               true                     Se deve mostrar o monograma quando não há imagem\nname                 string                -                        Nome usado para gerar o monograma\nmonogramStyle        StyleProp             -                        Estilo personalizado para o monograma","frontmatter":{}},{"id":6,"title":"Icon","routePath":"/components/media/icon","lang":"","toc":[{"text":"Importação","id":"importação","depth":2,"charIndex":212},{"text":"Uso Básico","id":"uso-básico","depth":2,"charIndex":229},{"text":"Variações","id":"variações","depth":2,"charIndex":296},{"text":"Tipos de Ícones","id":"tipos-de-ícones","depth":3,"charIndex":309},{"text":"Tamanho Personalizado","id":"tamanho-personalizado","depth":3,"charIndex":588},{"text":"Cor Personalizada","id":"cor-personalizada","depth":3,"charIndex":616},{"text":"Emoji como Ícone","id":"emoji-como-ícone","depth":3,"charIndex":640},{"text":"Ícones Touchable ou Não Touchable","id":"ícones-touchable-ou-não-touchable","depth":3,"charIndex":663},{"text":"Dimensões Personalizadas (para SVGs)","id":"dimensões-personalizadas-para-svgs","depth":3,"charIndex":807},{"text":"Cores de Fundo e Borda","id":"cores-de-fundo-e-borda","depth":3,"charIndex":850},{"text":"Manipulação de Eventos","id":"manipulação-de-eventos","depth":2,"charIndex":879},{"text":"Acessibilidade","id":"acessibilidade","depth":2,"charIndex":1201},{"text":"Exemplo com Acessibilidade","id":"exemplo-com-acessibilidade","depth":3,"charIndex":1527},{"text":"Boas Práticas de Acessibilidade","id":"boas-práticas-de-acessibilidade","depth":3,"charIndex":1601},{"text":"TestIDs","id":"testids","depth":2,"charIndex":2135},{"text":"Exemplo de uso de TestIDs","id":"exemplo-de-uso-de-testids","depth":3,"charIndex":2427},{"text":"Ícones SVG Customizados","id":"ícones-svg-customizados","depth":2,"charIndex":2593},{"text":"Props","id":"props","depth":2,"charIndex":2799}],"domain":"","content":"#\n\nO componente Icon fornece uma maneira fácil de utilizar ícones em sua aplicação,\noferecendo suporte a várias bibliotecas de ícones, incluindo FontAwesome e\nMaterial, além de ícones SVG customizados e emojis.\n\n\nImportação#\n\n\n\n\n\nUso Básico#\n\n\n\n\n\nconst BasicIconExample = () => (\n  \n    \n  \n);\n\n\n\nVariações#\n\n\nTipos de Ícones#\n\nO componente Icon suporta diferentes tipos de fontes de ícones, que podem ser\ndefinidos usando a propriedade type:\n\n\n\n// FontAwesome (padrão)\n\n\n// Material Icons\n\n\n// FontAwesome Brands\n\n\n// FontAwesome Light\n\n\n// FontAwesome Regular\n\n\n// FontAwesome Solid\n\n\n\n\nTamanho Personalizado#\n\n\n\n\n\nCor Personalizada#\n\n\n\n\n\nEmoji como Ícone#\n\n\n\n\n\nÍcones Touchable ou Não Touchable#\n\nPor padrão, todos os ícones são touchable (podem ser pressionados). Para criar\num ícone apenas visual:\n\n\n\n\n\nDimensões Personalizadas (para SVGs)#\n\n\n\n\n\nCores de Fundo e Borda#\n\n\n\n\n\nManipulação de Eventos#\n\nO Icon permite definir uma função para tratar o evento de clique:\n\nconst IconButtonExample = () => {\n  const handleIconPress = () => {\n    // Ação quando o ícone for pressionado\n    console.log('Ícone foi pressionado');\n    // Ou navegação, feedback tátil, etc.\n  };\n  \n  return (\n    \n  );\n};\n\n\n\nAcessibilidade#\n\nO componente Icon implementa automaticamente recursos de acessibilidade, como:\n\n * Os ícones são tratados como botões para leitores de tela (quando\n   touchable={true})\n * Utiliza propriedades de acessibilidade específicas para descrição do ícone\n * Fornece área de toque adequada para facilitar interações\n\n\nExemplo com Acessibilidade#\n\n navigation.navigate('Notifications')}\n/>\n\n\n\nBoas Práticas de Acessibilidade#\n\n 1. Labels descritivos:\n    \n    * Use verbos de ação que descrevam o que o ícone faz quando pressionado\n    * Exemplo: \"Voltar para a tela anterior\" em vez de \"Seta para esquerda\"\n\n 2. Tamanho adequado:\n    \n    * Use ícones com tamanho suficiente para fácil toque (recomendado 44x44 dp)\n    * O tamanho mínimo recomendado é de 24x24 dp\n\n 3. Contraste:\n    \n    * Garanta que a cor do ícone tenha contraste adequado com o fundo\n    * Considere usar cores do tema para manter a consistência visual\n\n\nTestIDs#\n\nO componente Icon gera TestIDs automaticamente seguindo a hierarquia:\n\n 1. Usa testID se fornecido explicitamente\n 2. Usa id se fornecido e testID não estiver presente\n 3. Usa accessibility como fallback final\n\nEste comportamento facilita a implementação de testes automatizados.\n\n\nExemplo de uso de TestIDs#\n\n// Explícito (prioridade mais alta)\n\n\n// Usando ID (segunda prioridade)\n\n\n// Usando accessibility como fallback (terceira prioridade)\n\n\n\n\nÍcones SVG Customizados#\n\nO componente Icon também suporta ícones SVG personalizados:\n\n// Os ícones SVG devem ser importados em assets/svg\n// O formato deve ser IconNome.tsx (primeira letra maiúscula)\n\n\n\n\n\nProps#\n\nPROP                 TIPO        PADRÃO                  DESCRIÇÃO\nid                   string      -                       ID do componente\naccessibility        string      -                       ID para acessibilidade\naccessibilityLabel   string      -                       Descrição para leitores de tela\ntestID               string      -                       ID para testes\nname                 string      -                       Nome do ícone\nsize                 number      22                      Tamanho do ícone em pixels\ncolor                string      -                       Cor do ícone\nbackgroundColor      string      -                       Cor de fundo do ícone\nborderColor          string      -                       Cor da borda do ícone\ntouchable            boolean     true                    Se o ícone pode ser pressionado\ntype                 IconFonts   IconFonts.FontAwesome   Tipo de fonte do ícone\nonPress              function    -                       Função chamada ao pressionar o ícone\nstyle                StyleProp   -                       Estilo personalizado para o ícone\nisEmoji              boolean     false                   Se o ícone é um emoji\nwidth                number      -                       Largura para ícones SVG\nheight               number      -                       Altura para ícones SVG","frontmatter":{}},{"id":7,"title":"Image","routePath":"/components/media/image","lang":"","toc":[{"text":"Importação","id":"importação","depth":2,"charIndex":171},{"text":"Exemplo Básico","id":"exemplo-básico","depth":2,"charIndex":188},{"text":"Exemplos","id":"exemplos","depth":2,"charIndex":209},{"text":"Com placeholder","id":"com-placeholder","depth":3,"charIndex":221},{"text":"Com fallback","id":"com-fallback","depth":3,"charIndex":243},{"text":"Com estilos personalizados","id":"com-estilos-personalizados","depth":3,"charIndex":262},{"text":"API","id":"api","depth":2,"charIndex":295},{"text":"Props","id":"props","depth":3,"charIndex":302},{"text":"Recursos Adicionais","id":"recursos-adicionais","depth":2,"charIndex":2071},{"text":"FastImage","id":"fastimage","depth":3,"charIndex":2094},{"text":"Preload","id":"preload","depth":3,"charIndex":2242},{"text":"Notas de uso","id":"notas-de-uso","depth":2,"charIndex":2533}],"domain":"","content":"#\n\nO componente Image fornece uma maneira consistente de exibir imagens em sua\naplicação React Native, com suporte para fallbacks, placeholders e opções de\nconfiguração.\n\n\nImportação#\n\n\n\n\n\nExemplo Básico#\n\n\n\n\n\nExemplos#\n\n\nCom placeholder#\n\n\n\n\n\nCom fallback#\n\n\n\n\n\nCom estilos personalizados#\n\n\n\n\n\nAPI#\n\n\nProps#\n\nPROP                 TIPO                                                    PADRÃO    DESCRIÇÃO\nid                   string                                                  -         ID do componente\naccessibility        string                                                  -         ID para acessibilidade\nsource               ImageSourcePropType                                     -         Fonte da imagem\nfallbackSource       ImageSourcePropType                                     -         Fonte alternativa caso a principal falhe\nplaceholderSource    ImageSourcePropType                                     -         Fonte de placeholder enquanto carrega\nwidth                number | string                                         -         Largura da imagem\nheight               number | string                                         -         Altura da imagem\nresizeMode           'cover' | 'contain' | 'stretch' | 'repeat' | 'center'   'cover'   Modo de redimensionamento\nborderRadius         number                                                  0         Raio da borda\nstyle                StyleProp                                               -         Estilos customizados\ncontainerStyle       StyleProp                                               -         Estilos para o container\ntestID               string                                                  -         ID para testes\naccessibilityLabel   string                                                  -         Rótulo de acessibilidade\nonLoad               () => void                                              -         Callback quando a imagem carrega\nonError              () => void                                              -         Callback quando ocorre erro\n\n\nRecursos Adicionais#\n\n\nFastImage#\n\nInternamente, o componente utiliza react-native-fast-image para melhor\ndesempenho e cache, além de suportar imagens remotas e locais.\n\n\nPreload#\n\nÉ possível fazer preload de imagens para melhorar a experiência do usuário em\ntelas que carregam várias imagens:\n\n\n\n// Preloading múltiplas imagens\npreloadImages([\n  'https://exemplo.com/imagem1.jpg',\n  'https://exemplo.com/imagem2.jpg',\n  'https://exemplo.com/imagem3.jpg'\n]);\n\n\n\nNotas de uso#\n\n * Sempre defina uma largura e altura explícitas para suas imagens\n * Utilize resizeMode=\"cover\" para imagens de fundo ou banners\n * Utilize resizeMode=\"contain\" para ícones e logos\n * Sempre forneça um fallback para imagens remotas que podem falhar\n * Defina accessibilityLabel descritivo para melhorar acessibilidade\n * Use borderRadius para criar imagens circulares (defina igual à metade da\n   largura/altura)","frontmatter":{}},{"id":8,"title":"Typography","routePath":"/components/typography","lang":"","toc":[{"text":"Importação","id":"importação","depth":2,"charIndex":134},{"text":"Exemplo Básico","id":"exemplo-básico","depth":2,"charIndex":151},{"text":"Exemplos","id":"exemplos","depth":2,"charIndex":188},{"text":"Variantes de tamanho","id":"variantes-de-tamanho","depth":3,"charIndex":200},{"text":"Com linha limitada de altura","id":"com-linha-limitada-de-altura","depth":3,"charIndex":352},{"text":"Número de linhas limitado","id":"número-de-linhas-limitado","depth":3,"charIndex":423},{"text":"Texto animado","id":"texto-animado","depth":3,"charIndex":620},{"text":"Com estilo personalizado","id":"com-estilo-personalizado","depth":3,"charIndex":671},{"text":"API","id":"api","depth":2,"charIndex":722},{"text":"Props","id":"props","depth":3,"charIndex":729},{"text":"Variantes Disponíveis","id":"variantes-disponíveis","depth":2,"charIndex":1869},{"text":"Notas de uso","id":"notas-de-uso","depth":2,"charIndex":2176}],"domain":"","content":"#\n\nO componente Typography é utilizado para renderizar texto com estilos\nconsistentes em toda a aplicação, seguindo o design system.\n\n\nImportação#\n\n\n\n\n\nExemplo Básico#\n\nTexto de exemplo\n\n\n\nExemplos#\n\n\nVariantes de tamanho#\n\nTexto muito pequeno\nTexto extra pequeno\nTexto pequeno\nTexto médio (padrão)\nTexto grande\nTexto extra grande\nTexto muito grande\n\n\n\nCom linha limitada de altura#\n\n\n  Texto com altura de linha mínima\n\n\n\n\nNúmero de linhas limitado#\n\n\n  Este texto será truncado se exceder duas linhas. Exemplo de texto longo para demonstrar a truncagem quando o conteúdo não cabe completamente no espaço reservado.\n\n\n\n\nTexto animado#\n\n\n  Este texto pode ser animado\n\n\n\n\nCom estilo personalizado#\n\n\n  Texto estilizado\n\n\n\n\nAPI#\n\n\nProps#\n\nPROP                TIPO                                                       PADRÃO   DESCRIÇÃO\nvariant             TypographyVariants | TextVariant | 'normal' | 'animated'   'md'     Variante de tamanho do texto\nlineHeightVariant   TypographyVariants                                         'min'    Variante de altura de linha\nchildren            string | string[] | ReactNode                              -        Conteúdo do texto\nid                  string                                                     -        ID para o componente\naccessibility       string                                                     -        Identificador de acessibilidade\nnumberOfLines       number                                                     -        Limita o número de linhas\nanimated            boolean                                                    false    Se o texto deve ser animado (depreciado, use\n                                                                                        variant=\"animated\")\nstyle               StyleProp                                                  -        Estilo personalizado\n\n\nVariantes Disponíveis#\n\nO componente suporta as seguintes variantes de tamanho:\n\n * min: Tamanho mínimo (10px)\n * xs: Extra pequeno (12px)\n * sm: Pequeno (13px)\n * md: Médio (15px, padrão)\n * lg: Grande (17px)\n * xl: Extra grande (24px)\n * max: Tamanho máximo (32px)\n * animated: Para textos com animação\n\n\nNotas de uso#\n\n * O componente aplica automaticamente as cores e tamanhos definidos no tema\n * Para texto animado, use variant=\"animated\" em vez da prop animated\n * A altura da linha é controlada pela prop lineHeightVariant, independente do\n   tamanho do texto\n * O componente pode receber qualquer outra propriedade válida do componente\n   Text nativo\n * O testID é gerado a partir de id, accessibility ou do próprio conteúdo\n   textual, nessa ordem de prioridade","frontmatter":{}},{"id":9,"title":"Acessibilidade","routePath":"/guide/accessibility","lang":"","toc":[{"text":"Princípios de Acessibilidade","id":"princípios-de-acessibilidade","depth":2,"charIndex":262},{"text":"Recursos de Acessibilidade Implementados","id":"recursos-de-acessibilidade-implementados","depth":2,"charIndex":784},{"text":"Propriedades Comuns de Acessibilidade","id":"propriedades-comuns-de-acessibilidade","depth":3,"charIndex":971},{"text":"TestIDs para Automação de Testes","id":"testids-para-automação-de-testes","depth":3,"charIndex":1452},{"text":"Boas Práticas por Tipo de Componente","id":"boas-práticas-por-tipo-de-componente","depth":2,"charIndex":1713},{"text":"Botões e Controles Interativos","id":"botões-e-controles-interativos","depth":3,"charIndex":1753},{"text":"Campos de Formulário","id":"campos-de-formulário","depth":3,"charIndex":2009},{"text":"Imagens e Mídia","id":"imagens-e-mídia","depth":3,"charIndex":2210},{"text":"Testando Acessibilidade","id":"testando-acessibilidade","depth":2,"charIndex":2419},{"text":"Checklist de Acessibilidade","id":"checklist-de-acessibilidade","depth":2,"charIndex":2914},{"text":"Recursos Adicionais","id":"recursos-adicionais","depth":2,"charIndex":3500}],"domain":"","content":"#\n\nA acessibilidade é uma parte fundamental do design do Fluid React Native. Nossa\nbiblioteca foi desenvolvida com foco em tornar aplicações móveis acessíveis para\ntodos os usuários, incluindo aqueles com deficiências visuais, auditivas,\nmotoras ou cognitivas.\n\n\nPrincípios de Acessibilidade#\n\nO Fluid React Native segue os seguintes princípios de acessibilidade:\n\n 1. Perceptível: Os componentes são projetados para serem perceptíveis por todos\n    os usuários, independentemente de suas habilidades.\n 2. Operável: Os componentes podem ser operados por uma ampla gama de\n    dispositivos de entrada.\n 3. Compreensível: A interface é projetada para ser clara, consistente e\n    previsível.\n 4. Robusto: Os componentes funcionam com uma ampla variedade de tecnologias\n    assistivas.\n\n\nRecursos de Acessibilidade Implementados#\n\nTodos os componentes do Fluid React Native implementam recursos de\nacessibilidade seguindo as melhores práticas para React Native, incluindo:\n\n\nPropriedades Comuns de Acessibilidade#\n\nPROPRIEDADE          DESCRIÇÃO\naccessibility        Identificador único para o componente (usado também para\n                     gerar testIDs)\naccessibilityLabel   Texto descritivo que será lido pelos leitores de tela\naccessibilityHint    Dica sobre o resultado da interação com o componente\naccessibilityRole    Papel do componente (ex: button, checkbox, header)\naccessibilityState   Estado atual do componente (ex: disabled, selected)\n\n\nTestIDs para Automação de Testes#\n\nNossos componentes seguem um padrão consistente para a geração de testIDs,\nfacilitando a automação de testes. O padrão geral é:\n\ncomponentType_identifier\n\n\nPor exemplo:\n\n * button_submit\n * textinput_email\n * checkbox_terms\n\n\nBoas Práticas por Tipo de Componente#\n\n\nBotões e Controles Interativos#\n\n * Use verbos de ação claros em labels e descrições\n * Garanta área de toque mínima de 44x44dp\n * Sempre forneça feedback visual e tátil para interações\n * Evite depender apenas de cores para indicar estados\n\n\n  Salvar\n\n\n\n\nCampos de Formulário#\n\n * Associe labels claros com campos de entrada\n * Forneça mensagens de erro descritivas e acessíveis\n * Use instruções explícitas em vez de placeholder como única indicação\n\n\n\n\n\nImagens e Mídia#\n\n * Sempre forneça texto alternativo descritivo para imagens\n * Use rótulos claros para ícones e elementos gráficos\n * Garanta que informações não são transmitidas apenas por meio visual\n\n\n\n\n\nTestando Acessibilidade#\n\nRecomendamos testar a acessibilidade de sua aplicação usando:\n\n 1. Leitores de tela nativos:\n    \n    * VoiceOver no iOS\n    * TalkBack no Android\n\n 2. Ferramentas de inspeção:\n    \n    * React Native Accessibility Inspector\n    * Accessibility Scanner (Android)\n    * Accessibility Inspector (iOS)\n\n 3. Testes automatizados:\n    \n    * Usando os TestIDs consistentes fornecidos pelos componentes\n    * Verificando atributos de acessibilidade em testes de integração\n\n\nChecklist de Acessibilidade#\n\nUse esta checklist ao implementar interfaces com Fluid React Native:\n\n * Todos os elementos interativos têm labels de acessibilidade descritivos\n * A hierarquia de navegação com leitor de tela é lógica\n * Componentes visuais têm contraste de cores adequado\n * Feedback é fornecido por múltiplos canais (visual, tátil)\n * Textos alternativos descrevem adequadamente imagens e ícones\n * Todos os estados de componentes são comunicados corretamente\n * Tamanhos de fonte são adequados e escaláveis\n * Áreas de toque são grandes o suficiente (mínimo 44x44dp)\n\n\nRecursos Adicionais#\n\nPara mais informações sobre acessibilidade em React Native:\n\n * Documentação oficial de acessibilidade do React Native\n * WCAG 2.1 Guidelines\n * Testing for Accessibility in React Native","frontmatter":{}},{"id":10,"title":"Instalação","routePath":"/guide/installation","lang":"","toc":[{"text":"Pré-requisitos","id":"pré-requisitos","depth":2,"charIndex":88},{"text":"Instalação","id":"instalação-1","depth":2,"charIndex":-1},{"text":"Dependências","id":"dependências","depth":2,"charIndex":333},{"text":"Configuração","id":"configuração","depth":2,"charIndex":693},{"text":"Uso básico","id":"uso-básico","depth":2,"charIndex":972}],"domain":"","content":"#\n\nPara começar a usar o Fluid React Native em seu projeto, siga as instruções\nabaixo.\n\n\nPré-requisitos#\n\n * Projeto React Native inicializado\n * Node.js (versão 18 ou superior)\n * Yarn ou npm\n\n\nInstalação#\n\n# Usando npm\nnpm install @platformbuilders/fluid-react-native\n\n# Usando yarn\nyarn add @platformbuilders/fluid-react-native\n\n\n\nDependências#\n\nO Fluid React Native requer as seguintes dependências:\n\n# Usando yarn\nyarn add @platformbuilders/helpers@0.11.3 @platformbuilders/theme-toolkit@0.3.0 styled-components@5.3.11 formik@2.4.6 lodash@4.17.21 lottie-react-native@7.1.0 react-native-camera@4.2.1 react-native-fast-image@8.6.3 react-native-svg@15.8.0 react-native-vector-icons@10.2.0\n\n\n\nConfiguração#\n\nApós a instalação, você precisará configurar o tema do Fluid React Native.\nRecomendamos envolver sua aplicação com o ThemeProvider do styled-components:\n\n\n\n\n\nconst App = () => {\n  return (\n    \n      {/* Sua aplicação aqui */}\n    \n  );\n};\n\nexport default App;\n\n\n\nUso básico#\n\nAgora você pode importar e usar os componentes do Fluid React Native em sua\naplicação:\n\n\n\n\nconst MyComponent = () => {\n  return (\n    <>\n      Olá, Fluid React Native!\n       console.log('Botão clicado')} />\n    </>\n  );\n};\n\nexport default MyComponent;\n","frontmatter":{}},{"id":11,"title":"Introdução","routePath":"/guide/introduction","lang":"","toc":[{"text":"O que é o Fluid React Native?","id":"o-que-é-o-fluid-react-native","depth":2,"charIndex":129},{"text":"Principais características","id":"principais-características","depth":2,"charIndex":464},{"text":"Próximos passos","id":"próximos-passos","depth":2,"charIndex":793}],"domain":"","content":"#\n\nO Fluid React Native é uma biblioteca de componentes React Native que implementa\no Design System Fluid da Platform Builders.\n\n\nO que é o Fluid React Native?#\n\nFluid React Native oferece uma coleção abrangente de componentes reutilizáveis\npara desenvolvimento mobile com React Native, seguindo as diretrizes do Design\nSystem Fluid. Esses componentes são projetados para ajudar os desenvolvedores a\ncriar interfaces consistentes, acessíveis e de alta qualidade.\n\n\nPrincipais características#\n\n * Componentização: componentes reutilizáveis e encapsulados\n * Acessibilidade: suporte integrado para recursos de acessibilidade\n * Personalização: temas e estilos personalizáveis\n * Testes: alta cobertura de testes para garantir qualidade\n * Documentação: documentação completa e exemplos de uso\n\n\nPróximos passos#\n\nPara começar a usar o Fluid React Native, consulte a seção de Instalação.","frontmatter":{}},{"id":12,"title":"Fluid React Native","routePath":"/","lang":"","toc":[{"text":"O que é o Fluid React Native?","id":"o-que-é-o-fluid-react-native","depth":2,"charIndex":160},{"text":"Por que usar o Fluid React Native?","id":"por-que-usar-o-fluid-react-native","depth":2,"charIndex":435},{"text":"Primeiros passos","id":"primeiros-passos","depth":2,"charIndex":782}],"domain":"","content":"#\n\nBem-vindo à documentação do Fluid React Native - uma biblioteca de componentes\npara React Native que implementa o Design System Fluid da Platform Builders.\n\n\nO que é o Fluid React Native?#\n\nO Fluid React Native é uma biblioteca completa de componentes reutilizáveis,\nprojetados para facilitar o desenvolvimento de aplicações móveis com React\nNative. Oferecemos componentes prontos para uso, altamente personalizáveis e\nacessíveis.\n\n\nPor que usar o Fluid React Native?#\n\n * Desenvolvimento rápido: componentes prontos para uso\n * Consistência visual: implementação do Design System Fluid\n * Acessibilidade: componentes projetados pensando em acessibilidade\n * Testabilidade: alta cobertura de testes e padrões de testID\n * Personalização: temas ajustáveis para suas necessidades\n\n\nPrimeiros passos#\n\nPara começar a usar o Fluid React Native em seu projeto, consulte nossa Guia de\nIntrodução.","frontmatter":{}}]