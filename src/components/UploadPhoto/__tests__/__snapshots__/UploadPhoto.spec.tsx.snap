// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UploadPhoto /> should render UploadPhoto 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "borderColor": "",
      "borderRadius": "px",
      "borderStyle": "dashed",
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 120,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
    }
  }
  testID="testing"
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      collapsable={false}
      nativeID="animatedComponent"
      style={
        Object {
          "marginBottom": 20,
          "opacity": 0.6,
        }
      }
    >
      <View
        accessibilityLabel="Image"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="Image"
      >
        <View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 36,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            󰋩
          </Text>
        </View>
      </View>
    </View>
    <Text
      accessibilityLabel="Adicionar Foto"
      lineHeightVariant="min"
      style={
        Array [
          Object {
            "color": "#000000",
            "fontSize": 15,
            "lineHeight": 15,
          },
          Object {
            "color": "#C6B09E",
          },
        ]
      }
      testID="Adicionar Foto"
      variant="md"
    >
      Adicionar Foto
    </Text>
  </View>
</View>
`;

exports[`<UploadPhoto /> should render UploadPhoto with all custom props 1`] = `
<View
  accessibilityLabel="testing"
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "borderColor": "",
      "borderRadius": "px",
      "borderStyle": "dashed",
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 120,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
    }
  }
  testID="testId"
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <ActivityIndicator
      size="small"
    />
  </View>
</View>
`;

exports[`<UploadPhoto /> should render UploadPhoto with camera 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "borderColor": "",
      "borderRadius": "px",
      "borderStyle": "dashed",
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 120,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
    }
  }
  testID="testing"
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <ActivityIndicator
      size="small"
    />
  </View>
</View>
`;

exports[`<UploadPhoto /> should render UploadPhoto with custom accessibility label 1`] = `
<View
  accessibilityLabel="testing"
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "borderColor": "",
      "borderRadius": "px",
      "borderStyle": "dashed",
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 120,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
    }
  }
  testID="testing"
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      collapsable={false}
      nativeID="animatedComponent"
      style={
        Object {
          "marginBottom": 20,
          "opacity": 0.6,
        }
      }
    >
      <View
        accessibilityLabel="Image"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="Image"
      >
        <View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 36,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            󰋩
          </Text>
        </View>
      </View>
    </View>
    <Text
      accessibilityLabel="Adicionar Foto"
      lineHeightVariant="min"
      style={
        Array [
          Object {
            "color": "#000000",
            "fontSize": 15,
            "lineHeight": 15,
          },
          Object {
            "color": "#C6B09E",
          },
        ]
      }
      testID="Adicionar Foto"
      variant="md"
    >
      Adicionar Foto
    </Text>
  </View>
</View>
`;

exports[`<UploadPhoto /> should render UploadPhoto with custom test id 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "borderColor": "",
      "borderRadius": "px",
      "borderStyle": "dashed",
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 120,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
    }
  }
  testID="testId"
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      collapsable={false}
      nativeID="animatedComponent"
      style={
        Object {
          "marginBottom": 20,
          "opacity": 0.6,
        }
      }
    >
      <View
        accessibilityLabel="Image"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="Image"
      >
        <View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 36,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            󰋩
          </Text>
        </View>
      </View>
    </View>
    <Text
      accessibilityLabel="Adicionar Foto"
      lineHeightVariant="min"
      style={
        Array [
          Object {
            "color": "#000000",
            "fontSize": 15,
            "lineHeight": 15,
          },
          Object {
            "color": "#C6B09E",
          },
        ]
      }
      testID="Adicionar Foto"
      variant="md"
    >
      Adicionar Foto
    </Text>
  </View>
</View>
`;
