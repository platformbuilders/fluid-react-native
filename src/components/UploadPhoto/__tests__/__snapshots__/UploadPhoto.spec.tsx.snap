// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UploadPhoto /> should render UploadPhoto 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "borderColor": "#f0f0f0",
      "borderRadius": 6,
      "borderStyle": "dashed",
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 120,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
    }
  }
  testID="testing"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      collapsable={false}
      style={
        {
          "marginBottom": 16,
          "opacity": 0.6,
        }
      }
    >
      <View
        accessibilityLabel="Image"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="Image"
      >
        <View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#444444",
                  "fontSize": 36,
                },
                undefined,
                {
                  "fontFamily": "FontAwesome5Free-Regular",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {
                  "fontWeight": "400",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <Text
      accessibilityLabel="Adicionar Foto"
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#4255EF",
          },
        ]
      }
      variant="md"
    >
      Adicionar Foto
    </Text>
  </View>
</View>
`;

exports[`<UploadPhoto /> should render UploadPhoto with all custom props 1`] = `
<View
  accessibilityLabel="testing"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "borderColor": "#f0f0f0",
      "borderRadius": 6,
      "borderStyle": "dashed",
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 120,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
    }
  }
  testID="testId"
>
  <RNCamera
    androidCameraPermissionOptions={
      {
        "buttonNegative": "Cancelar",
        "buttonPositive": "Ok",
        "message": "Precisamos da sua permissão para usar a câmera",
        "title": "Câmera",
      }
    }
    flashMode="auto"
    style={
      [
        {
          "height": "100%",
          "overflow": "hidden",
        },
      ]
    }
    type="front"
  />
</View>
`;

exports[`<UploadPhoto /> should render UploadPhoto with camera 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "borderColor": "#f0f0f0",
      "borderRadius": 6,
      "borderStyle": "dashed",
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 120,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
    }
  }
  testID="testing"
>
  <RNCamera
    androidCameraPermissionOptions={
      {
        "buttonNegative": "Cancelar",
        "buttonPositive": "Ok",
        "message": "Precisamos da sua permissão para usar a câmera",
        "title": "Câmera",
      }
    }
    flashMode="auto"
    style={
      [
        {
          "height": "100%",
          "overflow": "hidden",
        },
      ]
    }
    type="front"
  />
</View>
`;

exports[`<UploadPhoto /> should render UploadPhoto with custom accessibility label 1`] = `
<View
  accessibilityLabel="testing"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "borderColor": "#f0f0f0",
      "borderRadius": 6,
      "borderStyle": "dashed",
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 120,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
    }
  }
  testID="testing"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      collapsable={false}
      style={
        {
          "marginBottom": 16,
          "opacity": 0.6,
        }
      }
    >
      <View
        accessibilityLabel="Image"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="Image"
      >
        <View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#444444",
                  "fontSize": 36,
                },
                undefined,
                {
                  "fontFamily": "FontAwesome5Free-Regular",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {
                  "fontWeight": "400",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <Text
      accessibilityLabel="Adicionar Foto"
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#4255EF",
          },
        ]
      }
      variant="md"
    >
      Adicionar Foto
    </Text>
  </View>
</View>
`;

exports[`<UploadPhoto /> should render UploadPhoto with custom test id 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "borderColor": "#f0f0f0",
      "borderRadius": 6,
      "borderStyle": "dashed",
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 120,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
    }
  }
  testID="testId"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      collapsable={false}
      style={
        {
          "marginBottom": 16,
          "opacity": 0.6,
        }
      }
    >
      <View
        accessibilityLabel="Image"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="Image"
      >
        <View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#444444",
                  "fontSize": 36,
                },
                undefined,
                {
                  "fontFamily": "FontAwesome5Free-Regular",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {
                  "fontWeight": "400",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <Text
      accessibilityLabel="Adicionar Foto"
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#4255EF",
          },
        ]
      }
      variant="md"
    >
      Adicionar Foto
    </Text>
  </View>
</View>
`;

exports[`<UploadPhoto /> should render with custom delete icon 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "borderColor": "#f0f0f0",
      "borderRadius": 6,
      "borderStyle": "dashed",
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 120,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
    }
  }
  testID="testing"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      collapsable={false}
      style={
        {
          "marginBottom": 16,
          "opacity": 0.6,
        }
      }
    >
      <View
        accessibilityLabel="Image"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="Image"
      >
        <View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#444444",
                  "fontSize": 36,
                },
                undefined,
                {
                  "fontFamily": "FontAwesome5Free-Regular",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {
                  "fontWeight": "400",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <Text
      accessibilityLabel="Adicionar Foto"
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#4255EF",
          },
        ]
      }
      variant="md"
    >
      Adicionar Foto
    </Text>
  </View>
</View>
`;

exports[`<UploadPhoto /> should render with custom upload text and icon 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "borderColor": "#f0f0f0",
      "borderRadius": 6,
      "borderStyle": "dashed",
      "borderWidth": 2,
      "justifyContent": "center",
      "minHeight": 120,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
    }
  }
  testID="testing"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      collapsable={false}
      style={
        {
          "marginBottom": 16,
          "opacity": 0.6,
        }
      }
    >
      <View
        accessibilityLabel="Camera"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="Camera"
      >
        <View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#444444",
                  "fontSize": 48,
                },
                undefined,
                {
                  "fontFamily": "FontAwesome5Free-Solid",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {
                  "fontWeight": "900",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <Text
      accessibilityLabel="Custom Upload Text"
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#4255EF",
          },
        ]
      }
      variant="md"
    >
      Custom Upload Text
    </Text>
  </View>
</View>
`;
