// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RadioButton /> should render checked radio button component with label 1`] = `
<View
  accessibilityHint="Select information pode ser selecionado com um toque"
  accessibilityLabel="Select information"
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": true,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
  testID="radio_testing_radio_btn"
>
  <View
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
        "minHeight": 44,
        "minWidth": 44,
      }
    }
  >
    <View
      importantForAccessibility="no"
      size={20}
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "#4444444D",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
    >
      <View
        internalSize={13}
        style={
          [
            {
              "backgroundColor": "#4255EF",
              "borderRadius": 6.5,
              "height": 13,
              "width": 13,
            },
          ]
        }
      />
    </View>
  </View>
  <Text
    accessibilityLabel="Select information"
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 14,
          "lineHeight": 16.8,
        },
        {
          "marginLeft": 8,
        },
        {},
      ]
    }
    variant="sm"
  >
    Select information
  </Text>
</View>
`;

exports[`<RadioButton /> should render correctly with both custom radio color and checked radio color 1`] = `
<View
  accessibilityHint="Esta opção pode ser selecionada com um toque"
  accessibilityLabel="Botão de opção"
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": true,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
  testID="radio_testing_radio_btn"
>
  <View
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
        "minHeight": 44,
        "minWidth": 44,
      }
    }
  >
    <View
      importantForAccessibility="no"
      radioButtonColor="#3498db"
      size={20}
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "#3498db",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
    >
      <View
        checkedRadioButtonColor="#e74c3c"
        internalSize={13}
        style={
          [
            {
              "backgroundColor": "#e74c3c",
              "borderRadius": 6.5,
              "height": 13,
              "width": 13,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`<RadioButton /> should render radio button component 1`] = `
<View
  accessibilityHint="Esta opção pode ser selecionada com um toque"
  accessibilityLabel="Botão de opção"
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": false,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
  testID="radio_testing_radio_btn"
>
  <View
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
        "minHeight": 44,
        "minWidth": 44,
      }
    }
  >
    <View
      importantForAccessibility="no"
      size={20}
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "#4444444D",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<RadioButton /> should render radio button component with both custom size and internal size 1`] = `
<View
  accessibilityHint="Esta opção pode ser selecionada com um toque"
  accessibilityLabel="Botão de opção"
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": true,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
  testID="radio_testing_radio_btn"
>
  <View
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
        "minHeight": 44,
        "minWidth": 44,
      }
    }
  >
    <View
      importantForAccessibility="no"
      size={30}
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "#4444444D",
            "borderRadius": 15,
            "borderStyle": "solid",
            "borderWidth": 2,
            "height": 30,
            "justifyContent": "center",
            "width": 30,
          },
        ]
      }
    >
      <View
        internalSize={15}
        style={
          [
            {
              "backgroundColor": "#4255EF",
              "borderRadius": 7.5,
              "height": 15,
              "width": 15,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`<RadioButton /> should render radio button component with custom checked 1`] = `
<View
  accessibilityHint="Esta opção pode ser selecionada com um toque"
  accessibilityLabel="Botão de opção"
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": true,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
  testID="radio_testing_radio_btn"
>
  <View
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
        "minHeight": 44,
        "minWidth": 44,
      }
    }
  >
    <View
      importantForAccessibility="no"
      size={20}
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "#4444444D",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
    >
      <View
        internalSize={13}
        style={
          [
            {
              "backgroundColor": "#4255EF",
              "borderRadius": 6.5,
              "height": 13,
              "width": 13,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`<RadioButton /> should render radio button component with custom checked radio button color 1`] = `
<View
  accessibilityHint="Esta opção pode ser selecionada com um toque"
  accessibilityLabel="Botão de opção"
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": false,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
  testID="radio_testing_radio_btn"
>
  <View
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
        "minHeight": 44,
        "minWidth": 44,
      }
    }
  >
    <View
      importantForAccessibility="no"
      size={20}
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "#4444444D",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<RadioButton /> should render radio button component with custom internal size 1`] = `
<View
  accessibilityHint="Esta opção pode ser selecionada com um toque"
  accessibilityLabel="Botão de opção"
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": false,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
  testID="radio_testing_radio_btn"
>
  <View
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
        "minHeight": 44,
        "minWidth": 44,
      }
    }
  >
    <View
      importantForAccessibility="no"
      size={20}
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "#4444444D",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<RadioButton /> should render radio button component with custom radio button color 1`] = `
<View
  accessibilityHint="Esta opção pode ser selecionada com um toque"
  accessibilityLabel="Botão de opção"
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": false,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
  testID="radio_testing_radio_btn"
>
  <View
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
        "minHeight": 44,
        "minWidth": 44,
      }
    }
  >
    <View
      importantForAccessibility="no"
      radioButtonColor="#3498db"
      size={20}
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "#3498db",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<RadioButton /> should render radio button component with custom size 1`] = `
<View
  accessibilityHint="Esta opção pode ser selecionada com um toque"
  accessibilityLabel="Botão de opção"
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": false,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
  testID="radio_testing_radio_btn"
>
  <View
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
        "minHeight": 44,
        "minWidth": 44,
      }
    }
  >
    <View
      importantForAccessibility="no"
      size={24}
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "#4444444D",
            "borderRadius": 12,
            "borderStyle": "solid",
            "borderWidth": 2,
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<RadioButton /> should render unchecked radio button component with label 1`] = `
<View
  accessibilityHint="Select information pode ser selecionado com um toque"
  accessibilityLabel="Select information"
  accessibilityRole="radio"
  accessibilityState={
    {
      "busy": undefined,
      "checked": false,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
    }
  }
  testID="radio_testing_radio_btn"
>
  <View
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
        "minHeight": 44,
        "minWidth": 44,
      }
    }
  >
    <View
      importantForAccessibility="no"
      size={20}
      style={
        [
          {
            "alignItems": "center",
            "borderColor": "#4444444D",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 2,
            "height": 20,
            "justifyContent": "center",
            "width": 20,
          },
        ]
      }
    />
  </View>
  <Text
    accessibilityLabel="Select information"
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 14,
          "lineHeight": 16.8,
        },
        {
          "marginLeft": 8,
        },
        {},
      ]
    }
    variant="sm"
  >
    Select information
  </Text>
</View>
`;
