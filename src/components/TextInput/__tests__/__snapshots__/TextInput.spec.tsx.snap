// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextInput /> should handle custom animation values 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <Text
    accessibilityLabel="Test Label"
    hasLeftIcon={false}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 13,
          "lineHeight": 15.6,
        },
        {
          "color": "#4255EF",
          "marginBottom": 4,
        },
        {},
      ]
    }
    variant="xs"
  >
    Test Label
  </Text>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should handle custom icon colors 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        iconName="test"
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should handle custom icon hit slop 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        iconName="test"
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should handle custom icon sets 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        iconName="custom"
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should handle custom input padding 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      inputLeftPadding={10}
      inputRightPadding={10}
      leftIcon={false}
      padding={20}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 20,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should handle custom label variant 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <Text
    accessibilityLabel="Test Label"
    hasLeftIcon={false}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 17,
          "lineHeight": 20.4,
        },
        {
          "color": "#4255EF",
          "marginBottom": 4,
        },
        {},
      ]
    }
    variant="lg"
  >
    Test Label
  </Text>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should handle error state with showBorderErrored 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Error message"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="danger"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
  <Text
    accessibilityLabel="Erro Error message"
    centered={false}
    large={false}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 13,
          "lineHeight": 15.6,
        },
        {
          "color": "#FF4F3F",
          "marginTop": 4,
          "textAlign": "left",
        },
        {},
      ]
    }
    testID="error_form_error"
    variant="xs"
  >
    Error message
  </Text>
</View>
`;

exports[`<TextInput /> should handle error state with showIconErrored 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Error message"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        iconName="error"
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        showIconErrored={true}
        status="danger"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
  <Text
    accessibilityLabel="Erro Error message"
    centered={false}
    large={false}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 13,
          "lineHeight": 15.6,
        },
        {
          "color": "#FF4F3F",
          "marginTop": 4,
          "textAlign": "left",
        },
        {},
      ]
    }
    testID="error_form_error"
    variant="xs"
  >
    Error message
  </Text>
</View>
`;

exports[`<TextInput /> should handle multiline with numberOfLines 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={true}
        numberOfLines={5}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render textinput 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render textinput with error 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Some error occurred"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="danger"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
  <Text
    accessibilityLabel="Erro Some error occurred"
    centered={false}
    large={false}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 13,
          "lineHeight": 15.6,
        },
        {
          "color": "#FF4F3F",
          "marginTop": 4,
          "textAlign": "left",
        },
        {},
      ]
    }
    testID="error_form_error"
    variant="xs"
  >
    Some error occurred
  </Text>
</View>
`;

exports[`<TextInput /> should render with bordered style 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      borderedBackgroundColor="#f5f5f5"
      borderedColor="#ccc"
      borderedHeight={50}
      borderedRadius={8}
      borderedWidth={2}
      error={false}
      showBorderErrored={true}
      style={
        [
          {
            "backgroundColor": "#f5f5f5",
            "borderColor": "#ccc",
            "borderRadius": 8,
            "borderStyle": "solid",
            "borderWidth": 2,
            "height": 50,
            "justifyContent": "center",
            "paddiingTop": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
          },
        ]
      }
      testID="bordered-wrapper"
    >
      <View
        hasBottomLine={true}
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "height": "100%",
              "width": "100%",
            },
          ]
        }
      >
        <View
          hasLeftIcon={false}
          style={
            [
              {
                "flexDirection": "column",
                "marginLeft": 0,
                "paddingBottom": 0,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 0,
                "width": "92%",
              },
            ]
          }
        >
          <Text
            accessibilityLabel="Label"
            lineHeightVariant="min"
            style={
              [
                {
                  "color": "#444444",
                  "fontSize": 15,
                  "lineHeight": 18,
                },
                {
                  "color": "#444444",
                  "left": 0,
                  "position": "absolute",
                  "top": -32,
                },
                {},
              ]
            }
            variant="md"
          >
            Label
          </Text>
          <TextInput
            accessibility=""
            accessibilityHint="Enter text"
            accessibilityLabel=""
            accessibilityLiveRegion="polite"
            accessibilityRole="text"
            accessibilityState={
              {
                "disabled": false,
              }
            }
            allowFontScaling={false}
            autoFocus={false}
            centered={false}
            contrast={false}
            id="test"
            isPlaceholder={false}
            keyboardType="default"
            large={false}
            multiline={false}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            options={
              {
                "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
                "translation": {
                  "*": [Function],
                },
                "validator": [Function],
              }
            }
            placeholder=""
            placeholderTextColor="#999999"
            status="default"
            style={
              [
                {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
                {},
              ]
            }
            testID="test"
            type="custom"
            underlineColorAndroid="transparent"
            value=""
            variant="md"
            withBottomline={true}
          />
        </View>
      </View>
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render with both label and borderedLabel 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      borderedHeight={50}
      borderedRadius={0}
      borderedWidth={1}
      error={false}
      showBorderErrored={true}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderColor": "#4255EF",
            "borderRadius": 0,
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 50,
            "justifyContent": "center",
            "paddiingTop": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
          },
        ]
      }
      testID="bordered-wrapper"
    >
      <View
        hasBottomLine={true}
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "height": "100%",
              "width": "100%",
            },
          ]
        }
      >
        <View
          hasLeftIcon={false}
          style={
            [
              {
                "flexDirection": "column",
                "marginLeft": 0,
                "paddingBottom": 0,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 0,
                "width": "92%",
              },
            ]
          }
        >
          <Text
            accessibilityLabel="Bordered Label"
            lineHeightVariant="min"
            style={
              [
                {
                  "color": "#444444",
                  "fontSize": 15,
                  "lineHeight": 18,
                },
                {
                  "color": "#444444",
                  "left": 0,
                  "position": "absolute",
                  "top": -32,
                },
                {},
              ]
            }
            variant="md"
          >
            Bordered Label
          </Text>
          <TextInput
            accessibility=""
            accessibilityHint="Enter text"
            accessibilityLabel=""
            accessibilityLiveRegion="polite"
            accessibilityRole="text"
            accessibilityState={
              {
                "disabled": false,
              }
            }
            allowFontScaling={false}
            autoFocus={false}
            centered={false}
            contrast={false}
            id="test"
            isPlaceholder={false}
            keyboardType="default"
            large={false}
            multiline={false}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            options={
              {
                "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
                "translation": {
                  "*": [Function],
                },
                "validator": [Function],
              }
            }
            placeholder=""
            placeholderTextColor="#999999"
            status="default"
            style={
              [
                {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
                {},
              ]
            }
            testID="test"
            type="custom"
            underlineColorAndroid="transparent"
            value=""
            variant="md"
            withBottomline={true}
          />
        </View>
      </View>
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render with bottom line 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render with custom icon type 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        iconName="book"
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render with custom inputLeftPadding and inputRightPadding 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      inputLeftPadding={15}
      inputRightPadding={15}
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 15,
            "paddingRight": 15,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render with custom inputPadding 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      padding={20}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 20,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render with different status 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="success"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="success"
      style={
        [
          {
            "backgroundColor": "#96C920",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render with error state 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Este campo é obrigatório"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="danger"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
  <Text
    accessibilityLabel="Erro Este campo é obrigatório"
    centered={false}
    large={false}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 13,
          "lineHeight": 15.6,
        },
        {
          "color": "#FF4F3F",
          "marginTop": 4,
          "textAlign": "left",
        },
        {},
      ]
    }
    testID="error_form_error"
    variant="xs"
  >
    Este campo é obrigatório
  </Text>
</View>
`;

exports[`<TextInput /> should render with fixed label 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <Text
    accessibilityLabel="Nome"
    hasLeftIcon={false}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 13,
          "lineHeight": 15.6,
        },
        {
          "color": "#4255EF",
          "marginBottom": 4,
        },
        {},
      ]
    }
    variant="xs"
  >
    Nome
  </Text>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render with floating label 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <Text
    accessibilityLabel="Nome"
    hasLeftIcon={false}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 13,
          "lineHeight": 15.6,
        },
        {
          "color": "#4255EF",
          "marginBottom": 4,
        },
        {},
      ]
    }
    variant="xs"
  >
    Nome
  </Text>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render with iconNameBordered 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      borderedHeight={50}
      borderedRadius={0}
      borderedWidth={1}
      error={false}
      showBorderErrored={true}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderColor": "#4255EF",
            "borderRadius": 0,
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 50,
            "justifyContent": "center",
            "paddiingTop": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
          },
        ]
      }
      testID="bordered-wrapper"
    >
      <View
        hasBottomLine={true}
        style={
          [
            {
              "alignItems": "center",
              "flexDirection": "row",
              "height": "100%",
              "width": "100%",
            },
          ]
        }
      >
        <View
          hasLeftIcon={false}
          style={
            [
              {
                "flexDirection": "column",
                "marginLeft": 0,
                "paddingBottom": 0,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 0,
                "width": "92%",
              },
            ]
          }
        >
          <TextInput
            accessibility=""
            accessibilityHint="Enter text"
            accessibilityLabel=""
            accessibilityLiveRegion="polite"
            accessibilityRole="text"
            accessibilityState={
              {
                "disabled": false,
              }
            }
            allowFontScaling={false}
            autoFocus={false}
            centered={false}
            contrast={false}
            iconNameBordered="search"
            id="test"
            isPlaceholder={false}
            keyboardType="default"
            large={false}
            multiline={false}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            options={
              {
                "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
                "translation": {
                  "*": [Function],
                },
                "validator": [Function],
              }
            }
            placeholder=""
            placeholderTextColor="#999999"
            status="default"
            style={
              [
                {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
                {},
              ]
            }
            testID="test"
            type="custom"
            underlineColorAndroid="transparent"
            value=""
            variant="md"
            withBottomline={true}
          />
        </View>
      </View>
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render with multiline 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={true}
        numberOfLines={3}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={true}
      />
    </View>
    <View
      contrast={false}
      status="default"
      style={
        [
          {
            "backgroundColor": "#444444",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render with props 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <Text
    accessibilityLabel="Name"
    hasLeftIcon={false}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 13,
          "lineHeight": 15.6,
        },
        {
          "color": "#4255EF",
          "marginBottom": 4,
        },
        {},
      ]
    }
    variant="xs"
  >
    Name
  </Text>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter your name"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={true}
        centered={true}
        contrast={true}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={true}
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder="Enter your name"
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="lg"
        withBottomline={true}
      />
    </View>
    <View
      contrast={true}
      status="default"
      style={
        [
          {
            "backgroundColor": "#ffffff",
            "height": 0.5,
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`<TextInput /> should render without bottom line 1`] = `
<View
  style={
    [
      {},
      {},
    ]
  }
>
  <View
    style={
      [
        {
          "justifyContent": "flex-start",
          "paddingTop": 0,
          "position": "relative",
        },
        {},
      ]
    }
  >
    <View
      leftIcon={false}
      rightIcon={false}
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
            "maxWidth": "100%",
            "overflow": "hidden",
            "paddingLeft": 4,
            "paddingRight": 4,
            "paddingTop": 4,
          },
        ]
      }
    >
      <TextInput
        accessibility=""
        accessibilityHint="Enter text"
        accessibilityLabel=""
        accessibilityLiveRegion="polite"
        accessibilityRole="text"
        accessibilityState={
          {
            "disabled": false,
          }
        }
        allowFontScaling={false}
        autoFocus={false}
        centered={false}
        contrast={false}
        id="test"
        isPlaceholder={false}
        keyboardType="default"
        large={false}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        options={
          {
            "mask": "****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************",
            "translation": {
              "*": [Function],
            },
            "validator": [Function],
          }
        }
        placeholder=""
        placeholderTextColor="#999999"
        status="default"
        style={
          [
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
            },
            {},
          ]
        }
        testID="test"
        type="custom"
        underlineColorAndroid="transparent"
        value=""
        variant="md"
        withBottomline={false}
      />
    </View>
  </View>
</View>
`;
