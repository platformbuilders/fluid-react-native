// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DatePicker /> should render datepicker 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;

exports[`<DatePicker /> should render datepicker with accessibility label 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;

exports[`<DatePicker /> should render datepicker with button cancel text 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;

exports[`<DatePicker /> should render datepicker with confirm button text 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;

exports[`<DatePicker /> should render datepicker with custom locale 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;

exports[`<DatePicker /> should render datepicker with custom mode 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;

exports[`<DatePicker /> should render datepicker with custom mode android 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;

exports[`<DatePicker /> should render datepicker with editable 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;

exports[`<DatePicker /> should render datepicker with error 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error="test"
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderColor": "#cc0000",
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
  <Text
    accessibilityLabel="Erro test"
    centered={false}
    large={false}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 13,
          "lineHeight": 15.6,
        },
        {
          "color": "#FF4F3F",
          "marginTop": 4,
          "textAlign": "left",
        },
      ]
    }
    testID="error_testing"
    variant="xs"
  >
    test
  </Text>,
]
`;

exports[`<DatePicker /> should render datepicker with format 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;

exports[`<DatePicker /> should render datepicker with label 1`] = `
[
  <Text
    accessibilityLabel="test"
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  >
    test
  </Text>,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;

exports[`<DatePicker /> should render datepicker with no dark 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;

exports[`<DatePicker /> should render datepicker with status 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;

exports[`<DatePicker /> should render datepicker with test id 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
    testID="test"
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;

exports[`<DatePicker /> should render datepicker with value 1`] = `
[
  <Text
    accessibilityLabel=""
    collapsable={false}
    dark={false}
    error=""
    isPlaceholder={true}
    lineHeightVariant="min"
    style={
      [
        {
          "color": "#444444",
          "fontSize": 15,
          "lineHeight": 18,
        },
        {
          "color": "#ffffff",
          "lineHeight": 19,
          "paddingBottom": 16,
        },
        {
          "fontSize": 18,
          "top": 40,
        },
      ]
    }
    variant="md"
  />,
  <View
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "width": 142,
        },
        [
          {
            "width": "100%",
          },
        ],
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          {
            "width": "100%",
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            {
              "borderWidth": 0,
            },
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            [
              {
                "color": "#c9c9c9",
              },
              {
                "color": "#fff",
                "fontSize": 18,
                "left": 0,
                "position": "absolute",
              },
            ]
          }
        >
           
        </Text>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      />
    </View>
  </View>,
  <View
    dark={false}
    style={
      [
        {
          "backgroundColor": "#ffffff",
          "height": 0.5,
        },
      ]
    }
  />,
]
`;
