// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Icon /> should render emoji icon 1`] = `
<View
  collapsable={false}
  style={{}}
>
  <View
    accessibilityLabel="test-accessibility"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="test-icon"
  >
    <View>
      <Text
        collapsable={false}
        style={
          {
            "backgroundColor": "transparent",
            "borderColor": "transparent",
            "color": undefined,
            "fontSize": 20,
            "height": undefined,
            "width": undefined,
          }
        }
      >
        👍
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Icon /> should render icon component correctly 1`] = `
<View
  collapsable={false}
  style={{}}
>
  <View
    accessibilityLabel="testing_icon"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="testing"
  >
    <View>
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            {
              "fontFamily": "FontAwesome5Free-Solid",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {
              "fontWeight": "900",
            },
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Icon /> should render non-touchable icon 1`] = `
<View
  collapsable={false}
  style={{}}
>
  <View
    accessibilityLabel="test-accessibility"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="test-icon"
  >
    <View>
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            {
              "fontFamily": "FontAwesome5Free-Solid",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {
              "fontWeight": "900",
            },
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Icon /> should render with Material icon type 1`] = `
<View
  collapsable={false}
  style={{}}
>
  <View
    accessibilityLabel="test-accessibility"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="test-icon"
  >
    <View>
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            {
              "fontFamily": "Material Design Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        󰋜
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Icon /> should render with custom accessibility label 1`] = `
<View
  collapsable={false}
  style={{}}
>
  <View
    accessibilityLabel="Custom Label"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="test-icon"
  >
    <View>
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            {
              "fontFamily": "FontAwesome5Free-Solid",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {
              "fontWeight": "900",
            },
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Icon /> should render with custom background and border colors 1`] = `
<View
  collapsable={false}
  style={{}}
>
  <View
    accessibilityLabel="test-accessibility"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="test-icon"
  >
    <View>
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            {
              "fontFamily": "FontAwesome5Free-Solid",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {
              "fontWeight": "900",
            },
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Icon /> should render with custom color 1`] = `
<View
  collapsable={false}
  style={{}}
>
  <View
    accessibilityLabel="test-accessibility"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="test-icon"
  >
    <View>
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "#FF0000",
              "fontSize": 20,
            },
            undefined,
            {
              "fontFamily": "FontAwesome5Free-Solid",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {
              "fontWeight": "900",
            },
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Icon /> should render with custom dimensions 1`] = `
<View
  collapsable={false}
  style={{}}
>
  <View
    accessibilityLabel="test-accessibility"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="test-icon"
  >
    <View>
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            {
              "fontFamily": "FontAwesome5Free-Solid",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {
              "fontWeight": "900",
            },
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Icon /> should render with custom size 1`] = `
<View
  collapsable={false}
  style={{}}
>
  <View
    accessibilityLabel="test-accessibility"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="test-icon"
  >
    <View>
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": undefined,
              "fontSize": 30,
            },
            undefined,
            {
              "fontFamily": "FontAwesome5Free-Solid",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {
              "fontWeight": "900",
            },
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Icon /> should render with default props 1`] = `
<View
  collapsable={false}
  style={{}}
>
  <View
    accessibilityLabel="test-accessibility"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="test-icon"
  >
    <View>
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            {
              "fontFamily": "FontAwesome5Free-Solid",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {
              "fontWeight": "900",
            },
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;
