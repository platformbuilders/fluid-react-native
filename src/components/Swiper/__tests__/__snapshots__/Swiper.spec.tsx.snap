// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Swiper /> should render swiper by children 1`] = `
<RCTScrollView
  accessibilityLabel="swiper_with_children"
  data={
    [
      <Typography>
        Unity Test
      </Typography>,
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  horizontal={true}
  initialNumToRender={1}
  initialScrollIndex={0}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  onScrollToIndexFailed={[Function]}
  onViewableItemsChanged={[Function]}
  pagingEnabled={true}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEnabled={true}
  scrollEventThrottle={50}
  showsHorizontalScrollIndicator={false}
  showsVerticalScrollIndicator={false}
  stickyHeaderIndices={[]}
  testID="swiper_with_children"
  viewabilityConfig={
    {
      "itemVisiblePercentThreshold": 60,
      "minimumViewTime": 200,
    }
  }
  viewabilityConfigCallbackPairs={
    [
      {
        "onViewableItemsChanged": [Function],
        "viewabilityConfig": {
          "itemVisiblePercentThreshold": 60,
          "minimumViewTime": 200,
        },
      },
    ]
  }
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={
        [
          {
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <Text
        accessibilityLabel="Unity Test"
        lineHeightVariant="min"
        style={
          [
            {
              "color": "#444444",
              "fontSize": 15,
              "lineHeight": 18,
            },
          ]
        }
        testID="Unity Test"
        variant="md"
      >
        Unity Test
      </Text>
    </View>
  </View>
</RCTScrollView>
`;

exports[`<Swiper /> should render swiper by renderItems 1`] = `
<RCTScrollView
  accessibilityLabel="swiper_with_render_items"
  data={
    [
      {
        "content": "Mock Content",
        "title": "Mock",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  horizontal={true}
  initialNumToRender={1}
  initialScrollIndex={0}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  onScrollToIndexFailed={[Function]}
  onViewableItemsChanged={[Function]}
  pagingEnabled={true}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEnabled={true}
  scrollEventThrottle={50}
  showsHorizontalScrollIndicator={false}
  showsVerticalScrollIndicator={false}
  stickyHeaderIndices={[]}
  testID="swiper_with_render_items"
  viewabilityConfig={
    {
      "itemVisiblePercentThreshold": 60,
      "minimumViewTime": 200,
    }
  }
  viewabilityConfigCallbackPairs={
    [
      {
        "onViewableItemsChanged": [Function],
        "viewabilityConfig": {
          "itemVisiblePercentThreshold": 60,
          "minimumViewTime": 200,
        },
      },
    ]
  }
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={
        [
          {
            "flexDirection": "row",
          },
          null,
        ]
      }
    >
      <Text
        accessibilityLabel="Mock Content"
        lineHeightVariant="min"
        style={
          [
            {
              "color": "#444444",
              "fontSize": 15,
              "lineHeight": 18,
            },
          ]
        }
        testID="Mock Content"
        variant="md"
      >
        Mock Content
      </Text>
    </View>
  </View>
</RCTScrollView>
`;
