// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button /> should render button 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button when rounded 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 22.5,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={true}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 22.5,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with both left and right icons 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <View
      collapsable={false}
      style={
        {
          "marginLeft": 0,
          "marginRight": 8,
        }
      }
    >
      <View
        accessibilityLabel="Ícone arrow-left"
        accessibilityRole="image"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="Arrow-left"
      >
        <View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#ffffff",
                  "fontSize": 20,
                },
                undefined,
                {
                  "fontFamily": "FontAwesome5Free-Solid",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {
                  "fontWeight": "900",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
    <View
      collapsable={false}
      style={
        {
          "marginLeft": 8,
          "marginRight": 0,
        }
      }
    >
      <View
        accessibilityLabel="Ícone arrow-right"
        accessibilityRole="image"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="Arrow-right"
      >
        <View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#ffffff",
                  "fontSize": 20,
                },
                undefined,
                {
                  "fontFamily": "FontAwesome5Free-Solid",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {
                  "fontWeight": "900",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render button with children 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="[object Object]"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="[object Object]"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    >
      <Text
        accessibilityLabel="Test"
        lineHeightVariant="min"
        style={
          [
            {
              "color": "#444444",
              "fontSize": 15,
              "lineHeight": 18,
            },
          ]
        }
        testID="Test"
        variant="md"
      >
        Test
      </Text>
    </Text>
  </View>
</View>
`;

exports[`<Button /> should render button with contrast 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with custom accessibility label 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="testing"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with custom style 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {
          "backgroundColor": "#2980b9",
        },
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with custom text style 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {
            "color": "#2980b9",
          },
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with flat style 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={true}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={true}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#4255EF",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with left icon 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <View
      collapsable={false}
      style={
        {
          "marginLeft": 0,
          "marginRight": 8,
        }
      }
    >
      <View
        accessibilityLabel="Ícone check"
        accessibilityRole="image"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="Check"
      >
        <View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#ffffff",
                  "fontSize": 20,
                },
                undefined,
                {
                  "fontFamily": "FontAwesome5Free-Solid",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {
                  "fontWeight": "900",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with left icon not touchable 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <View
      collapsable={false}
      style={
        {
          "marginLeft": 0,
          "marginRight": 8,
        }
      }
    >
      <View
        accessibilityLabel="Ícone check"
        accessibilityRole="image"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="Check"
      >
        <View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#ffffff",
                  "fontSize": 20,
                },
                undefined,
                {
                  "fontFamily": "FontAwesome5Free-Solid",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {
                  "fontWeight": "900",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with loading 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": true,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <LottieAnimationView
      accessibilityLabel="Aguarde"
      autoPlay={true}
      cacheComposition={true}
      colorFilters={[]}
      contrast={false}
      enableMergePathsAndroidForKitKatAndAbove={false}
      enableSafeModeAndroid={false}
      loop={true}
      onAnimationFailure={[Function]}
      onAnimationFinish={[Function]}
      onAnimationLoaded={[Function]}
      progress={0}
      resizeMode="contain"
      sourceJson="{"v":"5.5.5","fr":60,"ip":0,"op":60,"w":375,"h":375,"nm":"dots-loader","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Shape Layer 3","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":20,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":40,"s":[70]},{"t":60,"s":[99]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,187,0],"ix":2},"a":{"a":0,"k":[-101.84,-18.84,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[43.32,43.32],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-100.84,-18.84],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":180,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Shape Layer 2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":10,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[60]},{"t":50,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[187,187,0],"ix":2},"a":{"a":0,"k":[-100.84,-18.84,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[43.32,43.32],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-100.84,-18.84],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":180,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Shape Layer 1","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":20,"s":[60]},{"t":40,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[123,187,0],"ix":2},"a":{"a":0,"k":[-100.84,-18.84,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[43.32,43.32],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-100.84,-18.84],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":180,"st":0,"bm":0}],"markers":[]}"
      speed={1}
      style={
        [
          {},
          {
            "alignSelf": "center",
            "width": 55,
          },
        ]
      }
      textFiltersAndroid={[]}
      textFiltersIOS={[]}
      useNativeLooping={false}
      variant="button"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with max width 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    maxWidth="300px"
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": 300,
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with min width 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    minWidth="200px"
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 200,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with outline variant 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="outline"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={true}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderColor": "#4255EF",
          "borderRadius": 4,
          "borderWidth": 2,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="outline"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#4255EF",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with right icon 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
    <View
      collapsable={false}
      style={
        {
          "marginLeft": 8,
          "marginRight": 0,
        }
      }
    >
      <View
        accessibilityLabel="Ícone check"
        accessibilityRole="image"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="Check"
      >
        <View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#ffffff",
                  "fontSize": 20,
                },
                undefined,
                {
                  "fontFamily": "FontAwesome5Free-Solid",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {
                  "fontWeight": "900",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render button with right icon not touchable 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
    <View
      collapsable={false}
      style={
        {
          "marginLeft": 8,
          "marginRight": 0,
        }
      }
    >
      <View
        accessibilityLabel="Ícone check"
        accessibilityRole="image"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="Check"
      >
        <View>
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              [
                {
                  "color": "#ffffff",
                  "fontSize": 20,
                },
                undefined,
                {
                  "fontFamily": "FontAwesome5Free-Solid",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                {
                  "fontWeight": "900",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`<Button /> should render button with secondary color variant 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="secondary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#42ADEF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="secondary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with test id 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with typography variant 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 17,
            "lineHeight": 20.4,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="lg"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with variant 1`] = `
<View
  accessibilityHint="Ativa ao pressionar"
  accessibilityLabel="Button"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": false,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "borderRadius": 4,
      "opacity": 1,
    }
  }
  testID="button_testing"
>
  <View
    buttonVariant="filled"
    colorVariant="primary"
    disabled={false}
    flat={false}
    hasBorder={false}
    rounded={false}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#4255EF",
          "borderColor": "#ffffff",
          "borderRadius": 4,
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 45,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 180,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        {},
      ]
    }
  >
    <Text
      accessibilityLabel="undefined"
      buttonVariant="filled"
      colorVariant="primary"
      disabled={false}
      flat={false}
      lineHeightVariant="min"
      style={
        [
          {
            "color": "#444444",
            "fontSize": 15,
            "lineHeight": 18,
          },
          {
            "color": "#ffffff",
            "fontWeight": "bold",
            "letterSpacing": 0.4,
          },
          {},
        ]
      }
      variant="md"
    />
  </View>
</View>
`;
