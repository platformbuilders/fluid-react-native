// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button /> should render button 1`] = `
<View
  accessibilityLabel=""
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 0,
      "opacity": 1,
    }
  }
  testID="testing"
>
  <View
    buttonVariant="primary"
    disabled={false}
    hasBorder={false}
    rounded={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#C6B09E",
          "borderColor": "black",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 70.71428571428572,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 282.8571428571429,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        Object {},
      ]
    }
  >
    <Text
      accessibility="undefined"
      accessibilityLabel="undefined"
      buttonVariant="primary"
      disabled={false}
      style={
        Array [
          Object {
            "color": "#212121",
            "fontSize": 16,
            "lineHeight": 22.5,
          },
          Object {
            "color": "#cccccc",
            "fontWeight": "500",
            "letterSpacing": 0.4,
          },
          Object {},
        ]
      }
      testID="undefined"
      variant="body"
    />
  </View>
</View>
`;

exports[`<Button /> should render button when rounded 1`] = `
<View
  accessibilityLabel=""
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 35.35714285714286,
      "opacity": 1,
    }
  }
  testID="testing"
>
  <View
    buttonVariant="primary"
    disabled={false}
    hasBorder={false}
    rounded={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#C6B09E",
          "borderColor": "black",
          "borderRadius": 35.35714285714286,
          "borderStyle": "solid",
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 70.71428571428572,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 282.8571428571429,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        },
        Object {},
      ]
    }
  >
    <Text
      accessibility="undefined"
      accessibilityLabel="undefined"
      buttonVariant="primary"
      disabled={false}
      style={
        Array [
          Object {
            "color": "#212121",
            "fontSize": 16,
            "lineHeight": 22.5,
          },
          Object {
            "color": "#cccccc",
            "fontWeight": "500",
            "letterSpacing": 0.4,
          },
          Object {},
        ]
      }
      testID="undefined"
      variant="body"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with children 1`] = `
<View
  accessibilityLabel=""
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 0,
      "opacity": 1,
    }
  }
  testID="testing"
>
  <View
    buttonVariant="primary"
    disabled={false}
    hasBorder={false}
    rounded={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#C6B09E",
          "borderColor": "black",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 70.71428571428572,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 282.8571428571429,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        Object {},
      ]
    }
  >
    <Text
      accessibility="[object Object]"
      accessibilityLabel="[object Object]"
      buttonVariant="primary"
      disabled={false}
      style={
        Array [
          Object {
            "color": "#212121",
            "fontSize": 16,
            "lineHeight": 22.5,
          },
          Object {
            "color": "#cccccc",
            "fontWeight": "500",
            "letterSpacing": 0.4,
          },
          Object {},
        ]
      }
      testID="[object Object]"
      variant="body"
    >
      <Text
        accessibility="Test"
        accessibilityLabel="Test"
        style={
          Array [
            Object {
              "color": "#212121",
              "fontSize": 16,
              "lineHeight": 22.5,
            },
          ]
        }
        testID="Test"
        variant="body"
      >
        Test
      </Text>
    </Text>
  </View>
</View>
`;

exports[`<Button /> should render button with contrast 1`] = `
<View
  accessibilityLabel=""
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 0,
      "opacity": 1,
    }
  }
  testID="testing"
>
  <View
    buttonVariant="primary"
    disabled={false}
    hasBorder={false}
    rounded={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#C6B09E",
          "borderColor": "black",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 70.71428571428572,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 282.8571428571429,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        Object {},
      ]
    }
  >
    <Text
      accessibility="undefined"
      accessibilityLabel="undefined"
      buttonVariant="primary"
      disabled={false}
      style={
        Array [
          Object {
            "color": "#212121",
            "fontSize": 16,
            "lineHeight": 22.5,
          },
          Object {
            "color": "#cccccc",
            "fontWeight": "500",
            "letterSpacing": 0.4,
          },
          Object {},
        ]
      }
      testID="undefined"
      variant="body"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with custom accessibility label 1`] = `
<View
  accessibilityLabel="testing"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 0,
      "opacity": 1,
    }
  }
  testID="testing"
>
  <View
    buttonVariant="primary"
    disabled={false}
    hasBorder={false}
    rounded={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#C6B09E",
          "borderColor": "black",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 70.71428571428572,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 282.8571428571429,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        Object {},
      ]
    }
  >
    <Text
      accessibility="undefined"
      accessibilityLabel="undefined"
      buttonVariant="primary"
      disabled={false}
      style={
        Array [
          Object {
            "color": "#212121",
            "fontSize": 16,
            "lineHeight": 22.5,
          },
          Object {
            "color": "#cccccc",
            "fontWeight": "500",
            "letterSpacing": 0.4,
          },
          Object {},
        ]
      }
      testID="undefined"
      variant="body"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with custom style 1`] = `
<View
  accessibilityLabel=""
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 0,
      "opacity": 1,
    }
  }
  testID="testing"
>
  <View
    buttonVariant="primary"
    disabled={false}
    hasBorder={false}
    rounded={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#C6B09E",
          "borderColor": "black",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 70.71428571428572,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 282.8571428571429,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        Object {
          "backgroundColor": "#2980b9",
        },
      ]
    }
  >
    <Text
      accessibility="undefined"
      accessibilityLabel="undefined"
      buttonVariant="primary"
      disabled={false}
      style={
        Array [
          Object {
            "color": "#212121",
            "fontSize": 16,
            "lineHeight": 22.5,
          },
          Object {
            "color": "#cccccc",
            "fontWeight": "500",
            "letterSpacing": 0.4,
          },
          Object {},
        ]
      }
      testID="undefined"
      variant="body"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with custom text style 1`] = `
<View
  accessibilityLabel=""
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 0,
      "opacity": 1,
    }
  }
  testID="testing"
>
  <View
    buttonVariant="primary"
    disabled={false}
    hasBorder={false}
    rounded={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#C6B09E",
          "borderColor": "black",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 70.71428571428572,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 282.8571428571429,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        Object {},
      ]
    }
  >
    <Text
      accessibility="undefined"
      accessibilityLabel="undefined"
      buttonVariant="primary"
      disabled={false}
      style={
        Array [
          Object {
            "color": "#212121",
            "fontSize": 16,
            "lineHeight": 22.5,
          },
          Object {
            "color": "#cccccc",
            "fontWeight": "500",
            "letterSpacing": 0.4,
          },
          Object {
            "color": "#2980b9",
          },
        ]
      }
      testID="undefined"
      variant="body"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with disabled 1`] = `
<View
  accessibilityLabel=""
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 0,
      "opacity": 1,
    }
  }
  testID="testing"
>
  <View
    buttonVariant="primary"
    disabled={true}
    hasBorder={false}
    rounded={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#C6B09E70",
          "borderColor": "black",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 70.71428571428572,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 282.8571428571429,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        Object {},
      ]
    }
  >
    <Text
      accessibility="undefined"
      accessibilityLabel="undefined"
      buttonVariant="primary"
      disabled={true}
      style={
        Array [
          Object {
            "color": "#212121",
            "fontSize": 16,
            "lineHeight": 22.5,
          },
          Object {
            "color": "#cccccc",
            "fontWeight": "500",
            "letterSpacing": 0.4,
          },
          Object {},
        ]
      }
      testID="undefined"
      variant="body"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with loading 1`] = `
<View
  accessibilityLabel=""
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 0,
      "opacity": 1,
    }
  }
  testID="testing"
>
  <View
    buttonVariant="primary"
    disabled={false}
    hasBorder={false}
    rounded={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#C6B09E",
          "borderColor": "black",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 70.71428571428572,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 282.8571428571429,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          undefined,
          undefined,
          Array [
            Object {},
            Object {
              "alignSelf": "center",
              "width": 86.42857142857142,
            },
          ],
        ]
      }
    >
      <View
        accessibilityLabel="Aguarde"
        autoPlay={true}
        contrast={false}
        enableMergePathsAndroidForKitKatAndAbove={false}
        forwardedRef={[Function]}
        loop={true}
        onAnimationFinish={[Function]}
        onLayout={[Function]}
        progress={0}
        resizeMode="contain"
        speed={1}
        style={
          Object {
            "alignSelf": "center",
            "height": "100%",
            "width": 86.42857142857142,
          }
        }
        testID="loading"
        variant="button"
      />
    </View>
  </View>
</View>
`;

exports[`<Button /> should render button with test id 1`] = `
<View
  accessibilityLabel=""
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 0,
      "opacity": 1,
    }
  }
  testID="test"
>
  <View
    buttonVariant="primary"
    disabled={false}
    hasBorder={false}
    rounded={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#C6B09E",
          "borderColor": "black",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 70.71428571428572,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 282.8571428571429,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        Object {},
      ]
    }
  >
    <Text
      accessibility="undefined"
      accessibilityLabel="undefined"
      buttonVariant="primary"
      disabled={false}
      style={
        Array [
          Object {
            "color": "#212121",
            "fontSize": 16,
            "lineHeight": 22.5,
          },
          Object {
            "color": "#cccccc",
            "fontWeight": "500",
            "letterSpacing": 0.4,
          },
          Object {},
        ]
      }
      testID="undefined"
      variant="body"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with typography variant 1`] = `
<View
  accessibilityLabel=""
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 0,
      "opacity": 1,
    }
  }
  testID="testing"
>
  <View
    buttonVariant="primary"
    disabled={false}
    hasBorder={false}
    rounded={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#C6B09E",
          "borderColor": "black",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 70.71428571428572,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 282.8571428571429,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        Object {},
      ]
    }
  >
    <Text
      accessibility="undefined"
      accessibilityLabel="undefined"
      buttonVariant="primary"
      disabled={false}
      style={
        Array [
          Object {
            "color": "#212121",
            "fontSize": 16,
            "lineHeight": 22.5,
          },
          Object {
            "color": "#cccccc",
            "fontWeight": "500",
            "letterSpacing": 0.4,
          },
          Object {},
        ]
      }
      testID="undefined"
      variant="headline"
    />
  </View>
</View>
`;

exports[`<Button /> should render button with variant 1`] = `
<View
  accessibilityLabel=""
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderRadius": 0,
      "opacity": 1,
    }
  }
  testID="testing"
>
  <View
    buttonVariant="secondary"
    disabled={false}
    hasBorder={false}
    rounded={false}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#805281",
          "borderColor": "black",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 0,
          "flexDirection": "row",
          "height": 70.71428571428572,
          "justifyContent": "center",
          "maxWidth": "100%",
          "minWidth": 282.8571428571429,
          "overflow": "hidden",
          "paddingBottom": 4,
          "paddingLeft": 4,
          "paddingRight": 4,
          "paddingTop": 4,
        },
        Object {},
      ]
    }
  >
    <Text
      accessibility="undefined"
      accessibilityLabel="undefined"
      buttonVariant="secondary"
      disabled={false}
      style={
        Array [
          Object {
            "color": "#212121",
            "fontSize": 16,
            "lineHeight": 22.5,
          },
          Object {
            "color": "#cccccc",
            "fontWeight": "500",
            "letterSpacing": 0.4,
          },
          Object {},
        ]
      }
      testID="undefined"
      variant="body"
    />
  </View>
</View>
`;
