// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Avatar /> should render Avatar 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderColor": "#007AFF",
      "borderRadius": 25,
      "borderWidth": 2,
      "height": 50,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
      "width": 50,
    }
  }
  testID="testing"
>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#efefef",
                "borderRadius": 3,
                "height": 40,
                "width": 40,
              },
              Array [
                Object {
                  "height": "101%",
                  "width": "101%",
                },
                Object {
                  "backgroundColor": undefined,
                },
              ],
              Object {
                "overflow": "hidden",
              },
            ]
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "backgroundColor": undefined,
                "height": "100%",
                "left": "0%",
                "opacity": 0.5,
                "width": "40%",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": "101%",
            "width": "101%",
          },
        ]
      }
    >
      <FastImageView
        onFastImageLoad={[Function]}
        onFastImageLoadStart={[Function]}
        resizeMode="cover"
        source={
          Object {
            "testUri": "../../../src/assets/images/avatar-placeholder.png",
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`<Avatar /> should render Avatar with all custom props 1`] = `
<View
  accessibilityLabel="testing"
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderColor": "#2ecc71",
      "borderRadius": 12,
      "borderWidth": 1,
      "height": 24,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
      "width": 24,
    }
  }
  testID="testId"
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <ActivityIndicator
      size="small"
    />
  </View>
</View>
`;

exports[`<Avatar /> should render Avatar with border 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderColor": "#007AFF",
      "borderRadius": 25,
      "borderWidth": 2,
      "height": 50,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
      "width": 50,
    }
  }
  testID="testing"
>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#efefef",
                "borderRadius": 3,
                "height": 40,
                "width": 40,
              },
              Array [
                Object {
                  "height": "101%",
                  "width": "101%",
                },
                Object {
                  "backgroundColor": undefined,
                },
              ],
              Object {
                "overflow": "hidden",
              },
            ]
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "backgroundColor": undefined,
                "height": "100%",
                "left": "0%",
                "opacity": 0.5,
                "width": "40%",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": "101%",
            "width": "101%",
          },
        ]
      }
    >
      <FastImageView
        onFastImageLoad={[Function]}
        onFastImageLoadStart={[Function]}
        resizeMode="cover"
        source={
          Object {
            "testUri": "../../../src/assets/images/avatar-placeholder.png",
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`<Avatar /> should render Avatar with camera 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderColor": "#007AFF",
      "borderRadius": 25,
      "borderWidth": 2,
      "height": 50,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
      "width": 50,
    }
  }
  testID="testing"
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <ActivityIndicator
      size="small"
    />
  </View>
</View>
`;

exports[`<Avatar /> should render Avatar with custom accessibility label 1`] = `
<View
  accessibilityLabel="testing"
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderColor": "#007AFF",
      "borderRadius": 25,
      "borderWidth": 2,
      "height": 50,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
      "width": 50,
    }
  }
  testID="testing"
>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#efefef",
                "borderRadius": 3,
                "height": 40,
                "width": 40,
              },
              Array [
                Object {
                  "height": "101%",
                  "width": "101%",
                },
                Object {
                  "backgroundColor": undefined,
                },
              ],
              Object {
                "overflow": "hidden",
              },
            ]
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "backgroundColor": undefined,
                "height": "100%",
                "left": "0%",
                "opacity": 0.5,
                "width": "40%",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": "101%",
            "width": "101%",
          },
        ]
      }
    >
      <FastImageView
        onFastImageLoad={[Function]}
        onFastImageLoadStart={[Function]}
        resizeMode="cover"
        source={
          Object {
            "testUri": "../../../src/assets/images/avatar-placeholder.png",
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`<Avatar /> should render Avatar with custom border 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderColor": "#2ecc71",
      "borderRadius": 25,
      "borderWidth": 1,
      "height": 50,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
      "width": 50,
    }
  }
  testID="testing"
>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#efefef",
                "borderRadius": 3,
                "height": 40,
                "width": 40,
              },
              Array [
                Object {
                  "height": "101%",
                  "width": "101%",
                },
                Object {
                  "backgroundColor": undefined,
                },
              ],
              Object {
                "overflow": "hidden",
              },
            ]
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "backgroundColor": undefined,
                "height": "100%",
                "left": "0%",
                "opacity": 0.5,
                "width": "40%",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": "101%",
            "width": "101%",
          },
        ]
      }
    >
      <FastImageView
        onFastImageLoad={[Function]}
        onFastImageLoadStart={[Function]}
        resizeMode="cover"
        source={
          Object {
            "testUri": "../../../src/assets/images/avatar-placeholder.png",
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`<Avatar /> should render Avatar with custom image 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderColor": "#007AFF",
      "borderRadius": 25,
      "borderWidth": 2,
      "height": 50,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
      "width": 50,
    }
  }
  testID="testing"
>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#efefef",
                "borderRadius": 3,
                "height": 40,
                "width": 40,
              },
              Array [
                Object {
                  "height": "101%",
                  "width": "101%",
                },
                Object {
                  "backgroundColor": undefined,
                },
              ],
              Object {
                "overflow": "hidden",
              },
            ]
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "backgroundColor": undefined,
                "height": "100%",
                "left": "0%",
                "opacity": 0.5,
                "width": "40%",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": "101%",
            "width": "101%",
          },
        ]
      }
    >
      <FastImageView
        onFastImageLoad={[Function]}
        onFastImageLoadStart={[Function]}
        resizeMode="cover"
        source={
          Object {
            "uri": Object {
              "testUri": "../../../src/assets/images/avatar-placeholder.png",
            },
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`<Avatar /> should render Avatar with custom size 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderColor": "#007AFF",
      "borderRadius": 12,
      "borderWidth": 2,
      "height": 24,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
      "width": 24,
    }
  }
  testID="testing"
>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#efefef",
                "borderRadius": 3,
                "height": 40,
                "width": 40,
              },
              Array [
                Object {
                  "height": "101%",
                  "width": "101%",
                },
                Object {
                  "backgroundColor": undefined,
                },
              ],
              Object {
                "overflow": "hidden",
              },
            ]
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "backgroundColor": undefined,
                "height": "100%",
                "left": "0%",
                "opacity": 0.5,
                "width": "40%",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": "101%",
            "width": "101%",
          },
        ]
      }
    >
      <FastImageView
        onFastImageLoad={[Function]}
        onFastImageLoadStart={[Function]}
        resizeMode="cover"
        source={
          Object {
            "testUri": "../../../src/assets/images/avatar-placeholder.png",
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`<Avatar /> should render Avatar with custom test id 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderColor": "#007AFF",
      "borderRadius": 25,
      "borderWidth": 2,
      "height": 50,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
      "width": 50,
    }
  }
  testID="testId"
>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#efefef",
                "borderRadius": 3,
                "height": 40,
                "width": 40,
              },
              Array [
                Object {
                  "height": "101%",
                  "width": "101%",
                },
                Object {
                  "backgroundColor": undefined,
                },
              ],
              Object {
                "overflow": "hidden",
              },
            ]
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "backgroundColor": undefined,
                "height": "100%",
                "left": "0%",
                "opacity": 0.5,
                "width": "40%",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": "101%",
            "width": "101%",
          },
        ]
      }
    >
      <FastImageView
        onFastImageLoad={[Function]}
        onFastImageLoadStart={[Function]}
        resizeMode="cover"
        source={
          Object {
            "testUri": "../../../src/assets/images/avatar-placeholder.png",
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`<Avatar /> should render Avatar with monogram 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderColor": "#007AFF",
      "borderRadius": 25,
      "borderWidth": 2,
      "height": 50,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
      "width": 50,
    }
  }
  testID="testId"
>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#efefef",
                "borderRadius": 3,
                "height": 40,
                "width": 40,
              },
              Array [
                Object {
                  "height": "101%",
                  "width": "101%",
                },
                Object {
                  "backgroundColor": undefined,
                },
              ],
              Object {
                "overflow": "hidden",
              },
            ]
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "backgroundColor": undefined,
                "height": "100%",
                "left": "0%",
                "opacity": 0.5,
                "width": "40%",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": "101%",
            "width": "101%",
          },
        ]
      }
    >
      <FastImageView
        onFastImageLoad={[Function]}
        onFastImageLoadStart={[Function]}
        resizeMode="cover"
        source={
          Object {
            "testUri": "../../../src/assets/images/avatar-placeholder.png",
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
  <View
    size={50}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#D90080",
          "height": 50,
          "justifyContent": "center",
          "position": "absolute",
          "textAlign": "center",
          "width": 50,
          "zIndex": 3,
        },
      ]
    }
  >
    <Text
      accessibilityLabel="BT"
      lineHeightVariant="min"
      size={50}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontSize": 15,
            "lineHeight": 15,
          },
          Object {
            "alignSelf": "center",
            "color": "#000000",
            "fontSize": 22.5,
            "letterSpacing": 1.3,
            "lineHeight": 22.5,
            "position": "relative",
            "textAlign": "center",
            "top": 3,
          },
        ]
      }
      testID="BT"
      variant="md"
    >
      BT
    </Text>
  </View>
</View>
`;

exports[`<Avatar /> should render Avatar with styled monogram 1`] = `
<View
  accessibilityLabel=""
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "borderColor": "#007AFF",
      "borderRadius": 25,
      "borderWidth": 2,
      "height": 50,
      "opacity": 1,
      "overflow": "hidden",
      "position": "relative",
      "width": 50,
    }
  }
  testID="testId"
>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "width": "100%",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#efefef",
                "borderRadius": 3,
                "height": 40,
                "width": 40,
              },
              Array [
                Object {
                  "height": "101%",
                  "width": "101%",
                },
                Object {
                  "backgroundColor": undefined,
                },
              ],
              Object {
                "overflow": "hidden",
              },
            ]
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "backgroundColor": undefined,
                "height": "100%",
                "left": "0%",
                "opacity": 0.5,
                "width": "40%",
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": "101%",
            "width": "101%",
          },
        ]
      }
    >
      <FastImageView
        onFastImageLoad={[Function]}
        onFastImageLoadStart={[Function]}
        resizeMode="cover"
        source={
          Object {
            "testUri": "../../../src/assets/images/avatar-placeholder.png",
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
  <View
    size={50}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#D90080",
          "height": 50,
          "justifyContent": "center",
          "position": "absolute",
          "textAlign": "center",
          "width": 50,
          "zIndex": 3,
        },
      ]
    }
  >
    <Text
      accessibilityLabel="BT"
      lineHeightVariant="min"
      size={50}
      style={
        Array [
          Object {
            "color": "#000000",
            "fontSize": 15,
            "lineHeight": 15,
          },
          Object {
            "alignSelf": "center",
            "color": "#000000",
            "fontSize": 22.5,
            "letterSpacing": 1.3,
            "lineHeight": 22.5,
            "position": "relative",
            "textAlign": "center",
            "top": 3,
          },
          Object {
            "backgroundColor": "#2ecc71",
          },
        ]
      }
      testID="BT"
      variant="md"
    >
      BT
    </Text>
  </View>
</View>
`;
