"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{5612:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"components/Markdown","title":"Markdown\\\\n\\\\nO componente Markdown permite renderizar texto formatado utilizando a sintaxe Markdown diretamente em sua aplica\xe7\xe3o React Native. Ele utiliza a biblioteca react-native-markdown-display para a renderiza\xe7\xe3o.\\\\n\\\\n## Importa\xe7\xe3o\\\\n\\\\njsx\\\\nimport { Markdown } from \'@platformbuilders/fluid-react-native\';\\\\n\\\\n\\\\n## Uso B\xe1sico\\\\n\\\\njsx\\\\nimport React from \'react\';\\\\nimport { View } from \'react-native\';\\\\nimport { Markdown } from \'@platformbuilders/fluid-react-native\';\\\\n\\\\nconst BasicMarkdownExample = () => {\\\\n  const markdownContent = \\\\n# T\xedtulo Principal\\\\n\\\\nEste \xe9 um par\xe1grafo com **texto em negrito** e *texto em it\xe1lico*.\\\\n\\\\n- Item de lista 1\\\\n- Item de lista 2\\\\n\\\\n[Este \xe9 um link](https://www.google.com)\\\\n  ;\\\\n  \\\\n  return (\\\\n    <View>\\\\n      <Markdown>\\\\n        {markdownContent}\\\\n      </Markdown>\\\\n    </View>\\\\n  );\\\\n};\\\\n\\\\n\\\\n## Varia\xe7\xf5es\\\\n\\\\n### Estilo Personalizado\\\\n\\\\nVoc\xea pode aplicar estilos de texto personalizados ao corpo do conte\xfado Markdown utilizando a propriedade textStyle.\\\\n\\\\njsx\\\\n<Markdown \\\\n  textStyle={{ \\\\n    fontSize: 16,\\\\n    color: \'#333\',\\\\n    lineHeight: 24 \\\\n  }}\\\\n>\\\\n  # T\xedtulo com Estilo Personalizado\\\\n  \\\\n  Este texto ter\xe1 o estilo definido pela textStyle.\\\\n</Markdown>\\\\n\\\\n\\\\n## Acessibilidade\\\\n\\\\nA biblioteca react-native-markdown-display, utilizada internamente, aplica propriedades b\xe1sicas de acessibilidade aos elementos renderizados, como cabe\xe7alhos e links. No entanto, para garantir uma acessibilidade completa, siga as boas pr\xe1ticas:\\\\n\\\\n### Boas Pr\xe1ticas de Acessibilidade\\\\n\\\\n1. **Estrutura Sem\xe2ntica**: Use a sintaxe Markdown corretamente para criar uma estrutura l\xf3gica (cabe\xe7alhos, listas, etc.). Isso ajuda os leitores de tela a navegar pelo conte\xfado.\\\\n2. **Descri\xe7\xf5es de Links**: Use textos descritivos para links. Em vez de \\\\\\"clique aqui\\\\\\", use \\\\\\"Leia mais sobre acessibilidade\\\\\\".\\\\n3. **Contraste**: Verifique se as cores do texto e dos links t\xeam contraste suficiente com o fundo, especialmente se voc\xea personalizar os estilos.\\\\n4. **Texto Alternativo para Imagens**: Se a sintaxe Markdown incluir imagens (embora o wrapper atual n\xe3o exponha diretamente essa funcionalidade da biblioteca subjacente), forne\xe7a texto alternativo descritivo.\\\\n\\\\n## Props\\\\n\\\\n| Prop        | Tipo       | Padr\xe3o  | Descri\xe7\xe3o                                                                |\\\\n|-------------|------------|---------|--------------------------------------------------------------------------|\\\\n| children  | string     | -       | O conte\xfado Markdown a ser renderizado.                                   |\\\\n| textStyle | TextStyle  | {}    | Estilos a serem aplicados ao corpo principal do texto Markdown (body). |\\\\n\\\\n## Tipos\\\\n\\\\n### TextStyle\\\\n\\\\nRefere-se ao tipo TextStyle padr\xe3o do React Native.\\\\n\\\\ntypescript\\\\nimport { TextStyle } from \'react-native\';\\\\n\\\\n\\\\n## Exemplo Completo\\\\n\\\\njsx\\\\nimport React from \'react\';\\\\nimport { View, StyleSheet, ScrollView } from \'react-native\';\\\\nimport { Markdown, Typography } from \'@platformbuilders/fluid-react-native\';\\\\n\\\\nconst MarkdownExample = () => {\\\\n  const basicMarkdown = \\\\n# Exemplo B\xe1sico\\\\n\\\\nRenderiza texto simples e formata\xe7\xe3o como **negrito**, *it\xe1lico*, e ~tachado~.\\\\n  ;\\\\n\\\\n  const listsMarkdown = \\\\n## Listas\\\\n\\\\n### Lista N\xe3o Ordenada\\\\n\\\\n- Item 1\\\\n- Item 2\\\\n  - Sub-item 2.1\\\\n  - Sub-item 2.2\\\\n- Item 3\\\\n\\\\n### Lista Ordenada\\\\n\\\\n1. Primeiro item\\\\n2. Segundo item\\\\n3. Terceiro item\\\\n  ;\\\\n\\\\n  const linksAndCodeMarkdown = \\\\n## Links e C\xf3digo\\\\n\\\\nVisite o [site do Google](https://www.google.com).\\\\n\\\\nExemplo de c\xf3digo inline: \\\\const a = 1;\\\\\\\\n\\\\nExemplo de bloco de c\xf3digo:\\\\n\\\\n\\\\\\\\\\\\javascript\\\\nfunction greet(name) {\\\\n  console.log(\'Ol\xe1, \' + name + \'!\');\\\\n}\\\\ngreet(\'Mundo\');\\\\n\\\\\\\\\\\\\\\\n  ;\\\\n\\\\n  const styledMarkdown = \\\\n## Texto com Estilo\\\\n\\\\nEste par\xe1grafo usar\xe1 o estilo personalizado definido na prop \\\\textStyle\\\\.\\\\n  ;\\\\n\\\\n  return (\\\\n    <ScrollView style={styles.container}>\\\\n      <Typography variant=\\\\\\"h3\\\\\\" style={styles.title}>\\\\n        Exemplos do Componente Markdown\\\\n      </Typography>\\\\n      \\\\n      <View style={styles.section}>\\\\n        <Typography variant=\\\\\\"subtitle\\\\\\" style={styles.sectionTitle}>\\\\n          Uso B\xe1sico\\\\n        </Typography>\\\\n        <Markdown>{basicMarkdown}</Markdown>\\\\n      </View>\\\\n      \\\\n      <View style={styles.separator} />\\\\n      \\\\n      <View style={styles.section}>\\\\n        <Typography variant=\\\\\\"subtitle\\\\\\" style={styles.sectionTitle}>\\\\n          Listas\\\\n        </Typography>\\\\n        <Markdown>{listsMarkdown}</Markdown>\\\\n      </View>\\\\n      \\\\n      <View style={styles.separator} />\\\\n      \\\\n      <View style={styles.section}>\\\\n        <Typography variant=\\\\\\"subtitle\\\\\\" style={styles.sectionTitle}>\\\\n          Links e C\xf3digo\\\\n        </Typography>\\\\n        <Markdown>{linksAndCodeMarkdown}</Markdown>\\\\n      </View>\\\\n      \\\\n      <View style={styles.separator} />\\\\n      \\\\n      <View style={styles.section}>\\\\n        <Typography variant=\\\\\\"subtitle\\\\\\" style={styles.sectionTitle}>\\\\n          Com Estilo Personalizado\\\\n        </Typography>\\\\n        <Markdown\\\\n          textStyle={styles.customTextStyle}\\\\n        >\\\\n          {styledMarkdown}\\\\n        </Markdown>\\\\n      </View>\\\\n    </ScrollView>\\\\n  );\\\\n};\\\\n\\\\nconst styles = StyleSheet.create({\\\\n  container: {\\\\n    flex: 1,\\\\n    padding: 16,\\\\n    backgroundColor: \'#FFFFFF\',\\\\n  },\\\\n  title: {\\\\n    marginBottom: 24,\\\\n  },\\\\n  section: {\\\\n    marginBottom: 24,\\\\n  },\\\\n  sectionTitle: {\\\\n    marginBottom: 8,\\\\n  },\\\\n  separator: {\\\\n    height: 1,\\\\n    backgroundColor: \'#E0E0E0\',\\\\n    marginVertical: 24,\\\\n  },\\\\n  customTextStyle: {\\\\n    fontSize: 16,\\\\n    color: \'#555\',\\\\n    lineHeight: 26,\\\\n  },\\\\n});\\\\n\\\\nexport default MarkdownExample;\\\\n","description":"Importa\xe7\xe3o\\\\n\\\\n`jsx\\\\nimport { Markdown } from \'@platformbuilders/fluid-react-native\';\\\\n`\\\\n\\\\n## Uso B\xe1sico\\\\n\\\\n`jsx\\\\nimport React from \'react\';\\\\nimport { View } from \'react-native\';\\\\nimport { Markdown } from \'@platformbuilders/fluid-react-native\';\\\\n\\\\nconst BasicMarkdownExample = () => {\\\\n  const markdownContent = \\\\n# T\xedtulo Principal\\\\n\\\\nEste \xe9 um par\xe1grafo com texto em negrito e texto em it\xe1lico.\\\\n\\\\n- Item de lista 1\\\\n- Item de lista 2\\\\n\\\\nEste \xe9 um link\\\\n  ;\\\\n  \\\\n  return (\\\\n    \\\\n      \\\\n        \\\\n      \\\\n    \\\\n  );\\\\n};\\\\n`\\\\n\\\\n## Varia\xe7\xf5es\\\\n\\\\n### Estilo Personalizado\\\\n\\\\nVoc\xea pode aplicar estilos de texto personalizados ao corpo do conte\xfado Markdown utilizando a propriedade textStyle.\\\\n\\\\n`jsx\\\\n\\\\n  # T\xedtulo com Estilo Personalizado\\\\n  \\\\n  Este texto ter\xe1 o estilo definido pela textStyle.\\\\n\\\\n`\\\\n\\\\n## Acessibilidade\\\\n\\\\nA biblioteca react-native-markdown-display, utilizada internamente, aplica propriedades b\xe1sicas de acessibilidade aos elementos renderizados, como cabe\xe7alhos e links. No entanto, para garantir uma acessibilidade completa, siga as boas pr\xe1ticas Use a sintaxe Markdown corretamente para criar uma estrutura l\xf3gica (cabe\xe7alhos, listas, etc.). Isso ajuda os leitores de tela a navegar pelo conte\xfado.\\\\n2. Descri\xe7\xf5es de Links Verifique se as cores do texto e dos links t\xeam contraste suficiente com o fundo, especialmente se voc\xea personalizar os estilos.\\\\n4. Texto Alternativo para Imagens \\\\const a = 1;\\\\\\\\n\\\\nExemplo de bloco de c\xf3digo {\\\\n    flex 16,\\\\n    backgroundColor {\\\\n    marginBottom {\\\\n    marginBottom {\\\\n    marginBottom {\\\\n    height \'#E0E0E0\',\\\\n    marginVertical {\\\\n    fontSize \'#555\',\\\\n    lineHeight: 26,\\\\n  },\\\\n});\\\\n\\\\nexport default MarkdownExample;\\\\n`","source":"@site/docs/components/Markdown.md","sourceDirName":"components","slug":"/components/Markdown","permalink":"/fluid-react-native/docs/components/Markdown","draft":false,"unlisted":false,"editUrl":"https://github.com/platformbuilders/fluid-react-native/edit/master/website/docs/components/Markdown.md","tags":[],"version":"current","frontMatter":{}}');var a=t(4848),i=t(8453);const s={},r="Markdown\n\nO componente Markdown permite renderizar texto formatado utilizando a sintaxe Markdown diretamente em sua aplica\xe7\xe3o React Native. Ele utiliza a biblioteca react-native-markdown-display para a renderiza\xe7\xe3o.\n\n## Importa\xe7\xe3o\n\njsx\nimport { Markdown } from '@platformbuilders/fluid-react-native';\n\n\n## Uso B\xe1sico\n\njsx\nimport React from 'react';\nimport { View } from 'react-native';\nimport { Markdown } from '@platformbuilders/fluid-react-native';\n\nconst BasicMarkdownExample = () => {\n  const markdownContent = `\n# T\xedtulo Principal\n\nEste \xe9 um par\xe1grafo com **texto em negrito** e *texto em it\xe1lico*.\n\n- Item de lista 1\n- Item de lista 2\n\n[Este \xe9 um link](https://www.google.com)\n  `;\n  \n  return (\n    <View>\n      <Markdown>\n        {markdownContent}\n      </Markdown>\n    </View>\n  );\n};\n\n\n## Varia\xe7\xf5es\n\n### Estilo Personalizado\n\nVoc\xea pode aplicar estilos de texto personalizados ao corpo do conte\xfado Markdown utilizando a propriedade textStyle.\n\njsx\n<Markdown \n  textStyle={{ \n    fontSize: 16,\n    color: '#333',\n    lineHeight: 24 \n  }}\n>\n  # T\xedtulo com Estilo Personalizado\n  \n  Este texto ter\xe1 o estilo definido pela `textStyle`.\n</Markdown>\n\n\n## Acessibilidade\n\nA biblioteca react-native-markdown-display, utilizada internamente, aplica propriedades b\xe1sicas de acessibilidade aos elementos renderizados, como cabe\xe7alhos e links. No entanto, para garantir uma acessibilidade completa, siga as boas pr\xe1ticas:\n\n### Boas Pr\xe1ticas de Acessibilidade\n\n1. Estrutura Sem\xe2ntica: Use a sintaxe Markdown corretamente para criar uma estrutura l\xf3gica (cabe\xe7alhos, listas, etc.). Isso ajuda os leitores de tela a navegar pelo conte\xfado.\n2. Descri\xe7\xf5es de Links: Use textos descritivos para links. Em vez de \"clique aqui\", use \"Leia mais sobre acessibilidade\".\n3. Contraste: Verifique se as cores do texto e dos links t\xeam contraste suficiente com o fundo, especialmente se voc\xea personalizar os estilos.\n4. Texto Alternativo para Imagens: Se a sintaxe Markdown incluir imagens (embora o wrapper atual n\xe3o exponha diretamente essa funcionalidade da biblioteca subjacente), forne\xe7a texto alternativo descritivo.\n\n## Props\n\n| Prop        | Tipo       | Padr\xe3o  | Descri\xe7\xe3o                                                                |\n|-------------|------------|---------|--------------------------------------------------------------------------|\n| children  | string     | -       | O conte\xfado Markdown a ser renderizado.                                   |\n| textStyle | TextStyle  | {}    | Estilos a serem aplicados ao corpo principal do texto Markdown (body). |\n\n## Tipos\n\n### TextStyle\n\nRefere-se ao tipo TextStyle padr\xe3o do React Native.\n\ntypescript\nimport { TextStyle } from 'react-native';\n\n\n## Exemplo Completo\n\njsx\nimport React from 'react';\nimport { View, StyleSheet, ScrollView } from 'react-native';\nimport { Markdown, Typography } from '@platformbuilders/fluid-react-native';\n\nconst MarkdownExample = () => {\n  const basicMarkdown = `\n# Exemplo B\xe1sico\n\nRenderiza texto simples e formata\xe7\xe3o como **negrito**, *it\xe1lico*, e ~tachado~.\n  `;\n\n  const listsMarkdown = `\n## Listas\n\n### Lista N\xe3o Ordenada\n\n- Item 1\n- Item 2\n  - Sub-item 2.1\n  - Sub-item 2.2\n- Item 3\n\n### Lista Ordenada\n\n1. Primeiro item\n2. Segundo item\n3. Terceiro item\n  `;\n\n  const linksAndCodeMarkdown = `\n## Links e C\xf3digo\n\nVisite o [site do Google](https://www.google.com).\n\nExemplo de c\xf3digo inline: `const a = 1;`\n\nExemplo de bloco de c\xf3digo:\n\n```javascript\nfunction greet(name) {\n  console.log('Ol\xe1, ' + name + '!');\n}\ngreet('Mundo');\n```\n  `;\n\n  const styledMarkdown = `\n## Texto com Estilo\n\nEste par\xe1grafo usar\xe1 o estilo personalizado definido na prop `textStyle`.\n  `;\n\n  return (\n    <ScrollView style={styles.container}>\n      <Typography variant=\"h3\" style={styles.title}>\n        Exemplos do Componente Markdown\n      </Typography>\n      \n      <View style={styles.section}>\n        <Typography variant=\"subtitle\" style={styles.sectionTitle}>\n          Uso B\xe1sico\n        </Typography>\n        <Markdown>{basicMarkdown}</Markdown>\n      </View>\n      \n      <View style={styles.separator} />\n      \n      <View style={styles.section}>\n        <Typography variant=\"subtitle\" style={styles.sectionTitle}>\n          Listas\n        </Typography>\n        <Markdown>{listsMarkdown}</Markdown>\n      </View>\n      \n      <View style={styles.separator} />\n      \n      <View style={styles.section}>\n        <Typography variant=\"subtitle\" style={styles.sectionTitle}>\n          Links e C\xf3digo\n        </Typography>\n        <Markdown>{linksAndCodeMarkdown}</Markdown>\n      </View>\n      \n      <View style={styles.separator} />\n      \n      <View style={styles.section}>\n        <Typography variant=\"subtitle\" style={styles.sectionTitle}>\n          Com Estilo Personalizado\n        </Typography>\n        <Markdown\n          textStyle={styles.customTextStyle}\n        >\n          {styledMarkdown}\n        </Markdown>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#FFFFFF',\n  },\n  title: {\n    marginBottom: 24,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    marginBottom: 8,\n  },\n  separator: {\n    height: 1,\n    backgroundColor: '#E0E0E0',\n    marginVertical: 24,\n  },\n  customTextStyle: {\n    fontSize: 16,\n    color: '#555',\n    lineHeight: 26,\n  },\n});\n\nexport default MarkdownExample;\n",l={},d=[];function c(n){const e={code:"code",h1:"h1",header:"header",strong:"strong",...(0,i.R)(),...n.components};return(0,a.jsx)(e.header,{children:(0,a.jsxs)(e.h1,{id:"markdownnno-componente-markdown-permite-renderizar-texto-formatado-utilizando-a-sintaxe-markdown-diretamente-em-sua-aplica\xe7\xe3o-react-native-ele-utiliza-a-biblioteca-react-native-markdown-display-para-a-renderiza\xe7\xe3onn-importa\xe7\xe3onnjsxnimport--markdown--from-platformbuildersfluid-react-nativennn-uso-b\xe1siconnjsxnimport-react-from-reactnimport--view--from-react-nativenimport--markdown--from-platformbuildersfluid-react-nativennconst-basicmarkdownexample----n--const-markdowncontent--n-t\xedtulo-principalnneste-\xe9-um-par\xe1grafo-com-texto-em-negrito-e-texto-em-it\xe1liconn--item-de-lista-1n--item-de-lista-2nneste-\xe9-um-linkhttpswwwgooglecomn--n--n--return-n----viewn------markdownn--------markdowncontentn------markdownn----viewn--nnnn-varia\xe7\xf5esnn-estilo-personalizadonnvoc\xea-pode-aplicar-estilos-de-texto-personalizados-ao-corpo-do-conte\xfado-markdown-utilizando-a-propriedade-textstylennjsxnmarkdown-n--textstyle-n----fontsize-16n----color-333n----lineheight-24-n--nn---t\xedtulo-com-estilo-personalizadon--n--este-texto-ter\xe1-o-estilo-definido-pela-textstylenmarkdownnnn-acessibilidadenna-biblioteca-react-native-markdown-display-utilizada-internamente-aplica-propriedades-b\xe1sicas-de-acessibilidade-aos-elementos-renderizados-como-cabe\xe7alhos-e-links-no-entanto-para-garantir-uma-acessibilidade-completa-siga-as-boas-pr\xe1ticasnn-boas-pr\xe1ticas-de-acessibilidadenn1-estrutura-sem\xe2ntica-use-a-sintaxe-markdown-corretamente-para-criar-uma-estrutura-l\xf3gica-cabe\xe7alhos-listas-etc-isso-ajuda-os-leitores-de-tela-a-navegar-pelo-conte\xfadon2-descri\xe7\xf5es-de-links-use-textos-descritivos-para-links-em-vez-de-clique-aqui-use-leia-mais-sobre-acessibilidaden3-contraste-verifique-se-as-cores-do-texto-e-dos-links-t\xeam-contraste-suficiente-com-o-fundo-especialmente-se-voc\xea-personalizar-os-estilosn4-texto-alternativo-para-imagens-se-a-sintaxe-markdown-incluir-imagens-embora-o-wrapper-atual-n\xe3o-exponha-diretamente-essa-funcionalidade-da-biblioteca-subjacente-forne\xe7a-texto-alternativo-descritivonn-propsnn-prop---------tipo--------padr\xe3o---descri\xe7\xe3o----------------------------------------------------------------n------------------------------------------------------------------------------------------------------------n-children---string---------------o-conte\xfado-markdown-a-ser-renderizado-----------------------------------n-textstyle--textstyle--------estilos-a-serem-aplicados-ao-corpo-principal-do-texto-markdown-body-nn-tiposnn-textstylennrefere-se-ao-tipo-textstyle-padr\xe3o-do-react-nativenntypescriptnimport--textstyle--from-react-nativennn-exemplo-completonnjsxnimport-react-from-reactnimport--view-stylesheet-scrollview--from-react-nativenimport--markdown-typography--from-platformbuildersfluid-react-nativennconst-markdownexample----n--const-basicmarkdown--n-exemplo-b\xe1siconnrenderiza-texto-simples-e-formata\xe7\xe3o-como-negrito-it\xe1lico-e-tachadon--nn--const-listsmarkdown--n-listasnn-lista-n\xe3o-ordenadann--item-1n--item-2n----sub-item-21n----sub-item-22n--item-3nn-lista-ordenadann1-primeiro-itemn2-segundo-itemn3-terceiro-itemn--nn--const-linksandcodemarkdown--n-links-e-c\xf3digonnvisite-o-site-do-googlehttpswwwgooglecomnnexemplo-de-c\xf3digo-inline-const-a--1nnexemplo-de-bloco-de-c\xf3digonnjavascriptnfunction-greetname-n--consolelogol\xe1---name--nngreetmundonn--nn--const-styledmarkdown--n-texto-com-estilonneste-par\xe1grafo-usar\xe1-o-estilo-personalizado-definido-na-prop-textstylen--nn--return-n----scrollview-stylestylescontainern------typography-varianth3-stylestylestitlen--------exemplos-do-componente-markdownn------typographyn------n------view-stylestylessectionn--------typography-variantsubtitle-stylestylessectiontitlen----------uso-b\xe1sicon--------typographyn--------markdownbasicmarkdownmarkdownn------viewn------n------view-stylestylesseparator-n------n------view-stylestylessectionn--------typography-variantsubtitle-stylestylessectiontitlen----------listasn--------typographyn--------markdownlistsmarkdownmarkdownn------viewn------n------view-stylestylesseparator-n------n------view-stylestylessectionn--------typography-variantsubtitle-stylestylessectiontitlen----------links-e-c\xf3digon--------typographyn--------markdownlinksandcodemarkdownmarkdownn------viewn------n------view-stylestylesseparator-n------n------view-stylestylessectionn--------typography-variantsubtitle-stylestylessectiontitlen----------com-estilo-personalizadon--------typographyn--------markdownn----------textstylestylescustomtextstylen--------n----------styledmarkdownn--------markdownn------viewn----scrollviewn--nnnconst-styles--stylesheetcreaten--container-n----flex-1n----padding-16n----backgroundcolor-ffffffn--n--title-n----marginbottom-24n--n--section-n----marginbottom-24n--n--sectiontitle-n----marginbottom-8n--n--separator-n----height-1n----backgroundcolor-e0e0e0n----marginvertical-24n--n--customtextstyle-n----fontsize-16n----color-555n----lineheight-26n--nnnexport-default-markdownexamplen",children:["Markdown\\n\\nO componente ",(0,a.jsx)(e.code,{children:"Markdown"})," permite renderizar texto formatado utilizando a sintaxe Markdown diretamente em sua aplica\xe7\xe3o React Native. Ele utiliza a biblioteca ",(0,a.jsx)(e.code,{children:"react-native-markdown-display"})," para a renderiza\xe7\xe3o.\\n\\n## Importa\xe7\xe3o\\n\\n",(0,a.jsx)(e.code,{children:"jsx\\nimport { Markdown } from '@platformbuilders/fluid-react-native';\\n"}),"\\n\\n## Uso B\xe1sico\\n\\n",(0,a.jsx)(e.code,{children:"jsx\\nimport React from 'react';\\nimport { View } from 'react-native';\\nimport { Markdown } from '@platformbuilders/fluid-react-native';\\n\\nconst BasicMarkdownExample = () => {\\n  const markdownContent = `\\n# T\xedtulo Principal\\n\\nEste \xe9 um par\xe1grafo com **texto em negrito** e *texto em it\xe1lico*.\\n\\n- Item de lista 1\\n- Item de lista 2\\n\\n[Este \xe9 um link](https://www.google.com)\\n  `;\\n  \\n  return (\\n    <View>\\n      <Markdown>\\n        {markdownContent}\\n      </Markdown>\\n    </View>\\n  );\\n};\\n"}),"\\n\\n## Varia\xe7\xf5es\\n\\n### Estilo Personalizado\\n\\nVoc\xea pode aplicar estilos de texto personalizados ao corpo do conte\xfado Markdown utilizando a propriedade ",(0,a.jsx)(e.code,{children:"textStyle"}),".\\n\\n",(0,a.jsx)(e.code,{children:"jsx\\n<Markdown \\n  textStyle={{ \\n    fontSize: 16,\\n    color: '#333',\\n    lineHeight: 24 \\n  }}\\n>\\n  # T\xedtulo com Estilo Personalizado\\n  \\n  Este texto ter\xe1 o estilo definido pela `textStyle`.\\n</Markdown>\\n"}),"\\n\\n## Acessibilidade\\n\\nA biblioteca ",(0,a.jsx)(e.code,{children:"react-native-markdown-display"}),", utilizada internamente, aplica propriedades b\xe1sicas de acessibilidade aos elementos renderizados, como cabe\xe7alhos e links. No entanto, para garantir uma acessibilidade completa, siga as boas pr\xe1ticas:\\n\\n### Boas Pr\xe1ticas de Acessibilidade\\n\\n1. ",(0,a.jsx)(e.strong,{children:"Estrutura Sem\xe2ntica"}),": Use a sintaxe Markdown corretamente para criar uma estrutura l\xf3gica (cabe\xe7alhos, listas, etc.). Isso ajuda os leitores de tela a navegar pelo conte\xfado.\\n2. ",(0,a.jsx)(e.strong,{children:"Descri\xe7\xf5es de Links"}),': Use textos descritivos para links. Em vez de "clique aqui", use "Leia mais sobre acessibilidade".\\n3. ',(0,a.jsx)(e.strong,{children:"Contraste"}),": Verifique se as cores do texto e dos links t\xeam contraste suficiente com o fundo, especialmente se voc\xea personalizar os estilos.\\n4. ",(0,a.jsx)(e.strong,{children:"Texto Alternativo para Imagens"}),": Se a sintaxe Markdown incluir imagens (embora o wrapper atual n\xe3o exponha diretamente essa funcionalidade da biblioteca subjacente), forne\xe7a texto alternativo descritivo.\\n\\n## Props\\n\\n| Prop        | Tipo       | Padr\xe3o  | Descri\xe7\xe3o                                                                |\\n|-------------|------------|---------|--------------------------------------------------------------------------|\\n| ",(0,a.jsx)(e.code,{children:"children"}),"  | string     | -       | O conte\xfado Markdown a ser renderizado.                                   |\\n| ",(0,a.jsx)(e.code,{children:"textStyle"})," | TextStyle  | ",(0,a.jsx)(e.code,{children:"{}"}),"    | Estilos a serem aplicados ao corpo principal do texto Markdown (",(0,a.jsx)(e.code,{children:"body"}),"). |\\n\\n## Tipos\\n\\n### TextStyle\\n\\nRefere-se ao tipo ",(0,a.jsx)(e.code,{children:"TextStyle"})," padr\xe3o do React Native.\\n\\n",(0,a.jsx)(e.code,{children:"typescript\\nimport { TextStyle } from 'react-native';\\n"}),"\\n\\n## Exemplo Completo\\n\\n",(0,a.jsx)(e.code,{children:"jsx\\nimport React from 'react';\\nimport { View, StyleSheet, ScrollView } from 'react-native';\\nimport { Markdown, Typography } from '@platformbuilders/fluid-react-native';\\n\\nconst MarkdownExample = () => {\\n  const basicMarkdown = `\\n# Exemplo B\xe1sico\\n\\nRenderiza texto simples e formata\xe7\xe3o como **negrito**, *it\xe1lico*, e ~tachado~.\\n  `;\\n\\n  const listsMarkdown = `\\n## Listas\\n\\n### Lista N\xe3o Ordenada\\n\\n- Item 1\\n- Item 2\\n  - Sub-item 2.1\\n  - Sub-item 2.2\\n- Item 3\\n\\n### Lista Ordenada\\n\\n1. Primeiro item\\n2. Segundo item\\n3. Terceiro item\\n  `;\\n\\n  const linksAndCodeMarkdown = `\\n## Links e C\xf3digo\\n\\nVisite o [site do Google](https://www.google.com).\\n\\nExemplo de c\xf3digo inline: \\`const a = 1;\\`\\n\\nExemplo de bloco de c\xf3digo:\\n\\n\\`\\`\\`javascript\\nfunction greet(name) {\\n  console.log('Ol\xe1, ' + name + '!');\\n}\\ngreet('Mundo');\\n\\`\\`\\`\\n  `;\\n\\n  const styledMarkdown = `\\n## Texto com Estilo\\n\\nEste par\xe1grafo usar\xe1 o estilo personalizado definido na prop \\`textStyle\\`.\\n  `;\\n\\n  return (\\n    <ScrollView style={styles.container}>\\n      <Typography variant=\\\"h3\\\" style={styles.title}>\\n        Exemplos do Componente Markdown\\n      </Typography>\\n      \\n      <View style={styles.section}>\\n        <Typography variant=\\\"subtitle\\\" style={styles.sectionTitle}>\\n          Uso B\xe1sico\\n        </Typography>\\n        <Markdown>{basicMarkdown}</Markdown>\\n      </View>\\n      \\n      <View style={styles.separator} />\\n      \\n      <View style={styles.section}>\\n        <Typography variant=\\\"subtitle\\\" style={styles.sectionTitle}>\\n          Listas\\n        </Typography>\\n        <Markdown>{listsMarkdown}</Markdown>\\n      </View>\\n      \\n      <View style={styles.separator} />\\n      \\n      <View style={styles.section}>\\n        <Typography variant=\\\"subtitle\\\" style={styles.sectionTitle}>\\n          Links e C\xf3digo\\n        </Typography>\\n        <Markdown>{linksAndCodeMarkdown}</Markdown>\\n      </View>\\n      \\n      <View style={styles.separator} />\\n      \\n      <View style={styles.section}>\\n        <Typography variant=\\\"subtitle\\\" style={styles.sectionTitle}>\\n          Com Estilo Personalizado\\n        </Typography>\\n        <Markdown\\n          textStyle={styles.customTextStyle}\\n        >\\n          {styledMarkdown}\\n        </Markdown>\\n      </View>\\n    </ScrollView>\\n  );\\n};\\n\\nconst styles = StyleSheet.create({\\n  container: {\\n    flex: 1,\\n    padding: 16,\\n    backgroundColor: '#FFFFFF',\\n  },\\n  title: {\\n    marginBottom: 24,\\n  },\\n  section: {\\n    marginBottom: 24,\\n  },\\n  sectionTitle: {\\n    marginBottom: 8,\\n  },\\n  separator: {\\n    height: 1,\\n    backgroundColor: '#E0E0E0',\\n    marginVertical: 24,\\n  },\\n  customTextStyle: {\\n    fontSize: 16,\\n    color: '#555',\\n    lineHeight: 26,\\n  },\\n});\\n\\nexport default MarkdownExample;\\n"})]})})}function m(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>r});var o=t(6540);const a={},i=o.createContext(a);function s(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);