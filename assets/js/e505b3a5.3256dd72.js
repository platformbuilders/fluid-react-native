"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5087],{8453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>i});var a=o(6540);const s={},r=a.createContext(s);function t(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),a.createElement(r.Provider,{value:n},e.children)}},9175:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>t,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"theming","title":"Personaliza\xe7\xe3o de Temas","description":"O Fluid oferece um sistema de temas robusto e flex\xedvel que permite customizar a apar\xeancia de todos os componentes. Este guia mostra como personalizar o tema de acordo com o seu design.","source":"@site/docs/theming.md","sourceDirName":".","slug":"/theming","permalink":"/docs/theming","draft":false,"unlisted":false,"editUrl":"https://github.com/platformbuilders/fluid-react-native/edit/master/website/docs/theming.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Melhores Pr\xe1ticas","permalink":"/docs/guides/best-practices"},"next":{"title":"Acessibilidade","permalink":"/docs/accessibility"}}');var s=o(4848),r=o(8453);const t={sidebar_position:4},i="Personaliza\xe7\xe3o de Temas",l={},d=[{value:"Sistema de Temas",id:"sistema-de-temas",level:2},{value:"Tema Padr\xe3o",id:"tema-padr\xe3o",level:3},{value:"Customiza\xe7\xe3o do Tema",id:"customiza\xe7\xe3o-do-tema",level:2},{value:"Sobreescrita Completa do Tema",id:"sobreescrita-completa-do-tema",level:3},{value:"Sobreescrita Parcial do Tema",id:"sobreescrita-parcial-do-tema",level:3},{value:"Estrutura do Tema",id:"estrutura-do-tema",level:2},{value:"Personalizando Cores",id:"personalizando-cores",level:3},{value:"Personalizando Tipografia",id:"personalizando-tipografia",level:3},{value:"Personalizando Espa\xe7amentos",id:"personalizando-espa\xe7amentos",level:3},{value:"Personalizando Bordas",id:"personalizando-bordas",level:3},{value:"Personalizando Eleva\xe7\xf5es (Sombras)",id:"personalizando-eleva\xe7\xf5es-sombras",level:3},{value:"Usando o Tema em Componentes",id:"usando-o-tema-em-componentes",level:2},{value:"Componentes da Biblioteca",id:"componentes-da-biblioteca",level:3},{value:"Componentes Personalizados",id:"componentes-personalizados",level:3},{value:"Temas M\xfaltiplos",id:"temas-m\xfaltiplos",level:2},{value:"Melhores Pr\xe1ticas",id:"melhores-pr\xe1ticas",level:2},{value:"Dicas Avan\xe7adas",id:"dicas-avan\xe7adas",level:2},{value:"Criar Utilit\xe1rios para o Tema",id:"criar-utilit\xe1rios-para-o-tema",level:3},{value:"Exemplo Completo",id:"exemplo-completo",level:2},{value:"Refer\xeancia Completa do Tema",id:"refer\xeancia-completa-do-tema",level:2}];function m(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"personaliza\xe7\xe3o-de-temas",children:"Personaliza\xe7\xe3o de Temas"})}),"\n",(0,s.jsx)(n.p,{children:"O Fluid oferece um sistema de temas robusto e flex\xedvel que permite customizar a apar\xeancia de todos os componentes. Este guia mostra como personalizar o tema de acordo com o seu design."}),"\n",(0,s.jsx)(n.h2,{id:"sistema-de-temas",children:"Sistema de Temas"}),"\n",(0,s.jsx)(n.p,{children:"O sistema de temas do Fluid \xe9 baseado em styled-components e fornece um mecanismo para definir valores padr\xe3o para cores, espa\xe7amentos, tipografia e muito mais."}),"\n",(0,s.jsx)(n.h3,{id:"tema-padr\xe3o",children:"Tema Padr\xe3o"}),"\n",(0,s.jsx)(n.p,{children:"O tema padr\xe3o inclui diversas categorias de configura\xe7\xf5es:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cores"}),": paleta principal, cores de feedback, cores de superf\xedcie"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipografia"}),": fam\xedlias de fontes, tamanhos, pesos"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Espa\xe7amentos"}),": valores para margens, paddings"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Eleva\xe7\xf5es"}),": configura\xe7\xf5es para sombras"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Bordas"}),": raios de borda, larguras"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Opacidade"}),": valores predefinidos"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Transi\xe7\xf5es"}),": dura\xe7\xf5es e easing functions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Breakpoints"}),": pontos de quebra para layouts responsivos"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"customiza\xe7\xe3o-do-tema",children:"Customiza\xe7\xe3o do Tema"}),"\n",(0,s.jsx)(n.p,{children:"Voc\xea pode personalizar o tema sobreescrevendo parcial ou totalmente o tema padr\xe3o."}),"\n",(0,s.jsx)(n.h3,{id:"sobreescrita-completa-do-tema",children:"Sobreescrita Completa do Tema"}),"\n",(0,s.jsx)(n.p,{children:"Para substituir completamente o tema padr\xe3o:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { ThemeProvider } from '@platformbuilders/fluid-react-native';\n\n// Seu tema personalizado\nconst customTheme = {\n  colors: {\n    primary: '#FF5722',\n    secondary: '#2196F3',\n    // ... outras cores\n  },\n  typography: {\n    fontFamily: {\n      regular: 'Roboto-Regular',\n      bold: 'Roboto-Bold',\n      // ... outras variantes\n    },\n    // ... outras configura\xe7\xf5es de tipografia\n  },\n  // ... outras categorias\n};\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={customTheme}>\n      {/* Seu aplicativo aqui */}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"sobreescrita-parcial-do-tema",children:"Sobreescrita Parcial do Tema"}),"\n",(0,s.jsx)(n.p,{children:"Para modificar apenas partes espec\xedficas do tema:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { ThemeProvider, defaultTheme } from '@platformbuilders/fluid-react-native';\n\n// Mescla o tema padr\xe3o com suas customiza\xe7\xf5es\nconst customTheme = {\n  ...defaultTheme,\n  colors: {\n    ...defaultTheme.colors,\n    primary: '#FF5722',\n    secondary: '#2196F3',\n  },\n};\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={customTheme}>\n      {/* Seu aplicativo aqui */}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"estrutura-do-tema",children:"Estrutura do Tema"}),"\n",(0,s.jsx)(n.p,{children:"O tema do Fluid \xe9 baseado na seguinte estrutura:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"export interface FluidTheme {\n  colors: ColorTheme;\n  typography: TypographyTheme;\n  spacing: SpacingTheme;\n  borders: BorderTheme;\n  elevations: ElevationTheme;\n  opacities: OpacityTheme;\n  transitions: TransitionTheme;\n  breakpoints: BreakpointTheme;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"personalizando-cores",children:"Personalizando Cores"}),"\n",(0,s.jsx)(n.p,{children:"As cores s\xe3o uma parte fundamental do tema:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const customColorTheme = {\n  ...defaultTheme.colors,\n  // Cores principais\n  primary: '#FF5722',\n  secondary: '#2196F3',\n  tertiary: '#4CAF50',\n  \n  // Cores de background\n  background: {\n    primary: '#FFFFFF',\n    secondary: '#F5F5F5',\n    tertiary: '#E0E0E0',\n  },\n  \n  // Cores de texto\n  text: {\n    primary: '#212121',\n    secondary: '#757575',\n    tertiary: '#9E9E9E',\n    inverse: '#FFFFFF',\n  },\n  \n  // Cores de feedback\n  feedback: {\n    success: '#4CAF50',\n    warning: '#FFC107',\n    error: '#F44336',\n    info: '#2196F3',\n  },\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"personalizando-tipografia",children:"Personalizando Tipografia"}),"\n",(0,s.jsx)(n.p,{children:"Para customizar a tipografia:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const customTypographyTheme = {\n  ...defaultTheme.typography,\n  fontFamily: {\n    regular: 'Roboto-Regular',\n    bold: 'Roboto-Bold',\n    light: 'Roboto-Light',\n    medium: 'Roboto-Medium',\n  },\n  fontSize: {\n    xxs: 10,\n    xs: 12,\n    sm: 14,\n    md: 16,\n    lg: 18,\n    xl: 20,\n    xxl: 24,\n    xxxl: 32,\n  },\n  lineHeight: {\n    xs: 16,\n    sm: 20,\n    md: 24,\n    lg: 28,\n    xl: 32,\n    xxl: 36,\n    xxxl: 40,\n  },\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"personalizando-espa\xe7amentos",children:"Personalizando Espa\xe7amentos"}),"\n",(0,s.jsx)(n.p,{children:"Para customizar os espa\xe7amentos:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const customSpacingTheme = {\n  ...defaultTheme.spacing,\n  xxxs: 2,\n  xxs: 4,\n  xs: 8,\n  sm: 12,\n  md: 16,\n  lg: 24,\n  xl: 32,\n  xxl: 40,\n  xxxl: 56,\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"personalizando-bordas",children:"Personalizando Bordas"}),"\n",(0,s.jsx)(n.p,{children:"Para customizar as bordas:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const customBorderTheme = {\n  ...defaultTheme.borders,\n  radius: {\n    none: 0,\n    xs: 2,\n    sm: 4,\n    md: 8,\n    lg: 12,\n    xl: 16,\n    pill: 500,\n    circular: '50%',\n  },\n  width: {\n    none: 0,\n    xs: 1,\n    sm: 2,\n    md: 3,\n    lg: 4,\n  },\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"personalizando-eleva\xe7\xf5es-sombras",children:"Personalizando Eleva\xe7\xf5es (Sombras)"}),"\n",(0,s.jsx)(n.p,{children:"Para customizar as eleva\xe7\xf5es:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const customElevationTheme = {\n  ...defaultTheme.elevations,\n  none: {\n    shadowColor: 'transparent',\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0,\n    shadowRadius: 0,\n    elevation: 0,\n  },\n  xs: {\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.18,\n    shadowRadius: 1,\n    elevation: 1,\n  },\n  // ... outras eleva\xe7\xf5es\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usando-o-tema-em-componentes",children:"Usando o Tema em Componentes"}),"\n",(0,s.jsx)(n.h3,{id:"componentes-da-biblioteca",children:"Componentes da Biblioteca"}),"\n",(0,s.jsx)(n.p,{children:"Todos os componentes da biblioteca Fluid usam automaticamente o tema definido."}),"\n",(0,s.jsx)(n.h3,{id:"componentes-personalizados",children:"Componentes Personalizados"}),"\n",(0,s.jsx)(n.p,{children:"Para usar o tema em seus pr\xf3prios componentes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { View, Text } from 'react-native';\nimport styled from 'styled-components/native';\nimport { useTheme } from '@platformbuilders/fluid-react-native';\n\n// Usando styled-components\nconst CustomButton = styled.TouchableOpacity`\n  background-color: ${({ theme }) => theme.colors.primary};\n  padding: ${({ theme }) => theme.spacing.md}px;\n  border-radius: ${({ theme }) => theme.borders.radius.md}px;\n`;\n\nconst ButtonText = styled.Text`\n  color: ${({ theme }) => theme.colors.text.inverse};\n  font-family: ${({ theme }) => theme.typography.fontFamily.bold};\n  font-size: ${({ theme }) => theme.typography.fontSize.md}px;\n`;\n\n// Usando o hook useTheme\nconst CustomComponent = () => {\n  const theme = useTheme();\n  \n  return (\n    <View style={{ \n      backgroundColor: theme.colors.background.primary,\n      padding: theme.spacing.md,\n      borderRadius: theme.borders.radius.md,\n    }}>\n      <Text style={{ \n        color: theme.colors.text.primary,\n        fontFamily: theme.typography.fontFamily.regular,\n        fontSize: theme.typography.fontSize.md,\n      }}>\n        Texto com tema aplicado\n      </Text>\n    </View>\n  );\n};\n\n// Exemplo de uso\nconst MyScreen = () => {\n  return (\n    <View>\n      <CustomButton>\n        <ButtonText>Bot\xe3o Personalizado</ButtonText>\n      </CustomButton>\n      <CustomComponent />\n    </View>\n  );\n};\n\nexport default MyScreen;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"temas-m\xfaltiplos",children:"Temas M\xfaltiplos"}),"\n",(0,s.jsx)(n.p,{children:"Para suportar m\xfaltiplos temas, como modo claro/escuro:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import React, { useState, useEffect } from 'react';\nimport { useColorScheme } from 'react-native';\nimport { ThemeProvider, defaultTheme } from '@platformbuilders/fluid-react-native';\n\n// Tema claro (baseado no tema padr\xe3o)\nconst lightTheme = {\n  ...defaultTheme,\n  colors: {\n    ...defaultTheme.colors,\n    background: {\n      primary: '#FFFFFF',\n      secondary: '#F5F5F5',\n    },\n    text: {\n      primary: '#212121',\n      secondary: '#757575',\n    },\n  },\n};\n\n// Tema escuro\nconst darkTheme = {\n  ...defaultTheme,\n  colors: {\n    ...defaultTheme.colors,\n    background: {\n      primary: '#121212',\n      secondary: '#1E1E1E',\n    },\n    text: {\n      primary: '#FFFFFF',\n      secondary: '#B0B0B0',\n    },\n  },\n};\n\nconst App = () => {\n  const colorScheme = useColorScheme();\n  const [theme, setTheme] = useState(colorScheme === 'dark' ? darkTheme : lightTheme);\n  \n  useEffect(() => {\n    setTheme(colorScheme === 'dark' ? darkTheme : lightTheme);\n  }, [colorScheme]);\n  \n  return (\n    <ThemeProvider theme={theme}>\n      {/* Seu aplicativo aqui */}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"melhores-pr\xe1ticas",children:"Melhores Pr\xe1ticas"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mantenha a consist\xeancia"}),": Use os valores do tema para manter a consist\xeancia visual em todo o aplicativo."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Evite valores hardcoded"}),": Sempre use valores do tema em vez de hardcoded para estilos."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Crie abstra\xe7\xf5es"}),": Para componentes muito customizados, crie abstra\xe7\xf5es que ainda utilizem o tema."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Documente personaliza\xe7\xe3o"}),": Mantenha a documenta\xe7\xe3o de suas personaliza\xe7\xf5es para facilitar a manuten\xe7\xe3o."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Teste temas diferentes"}),": Certifique-se de testar seu aplicativo com diferentes temas (claro/escuro)."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"dicas-avan\xe7adas",children:"Dicas Avan\xe7adas"}),"\n",(0,s.jsx)(n.h3,{id:"criar-utilit\xe1rios-para-o-tema",children:"Criar Utilit\xe1rios para o Tema"}),"\n",(0,s.jsx)(n.p,{children:"Voc\xea pode criar utilit\xe1rios para facilitar o uso do tema:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { useTheme } from '@platformbuilders/fluid-react-native';\n\nexport const useStyles = () => {\n  const theme = useTheme();\n  \n  // Retorna um objeto com estilos comuns\n  return {\n    container: {\n      backgroundColor: theme.colors.background.primary,\n      padding: theme.spacing.md,\n    },\n    title: {\n      color: theme.colors.text.primary,\n      fontFamily: theme.typography.fontFamily.bold,\n      fontSize: theme.typography.fontSize.xl,\n      marginBottom: theme.spacing.sm,\n    },\n    // ... outros estilos reutiliz\xe1veis\n  };\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"exemplo-completo",children:"Exemplo Completo"}),"\n",(0,s.jsx)(n.p,{children:"Aqui est\xe1 um exemplo completo de customiza\xe7\xe3o de tema:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { ThemeProvider, defaultTheme } from '@platformbuilders/fluid-react-native';\n\n// Tema personalizado\nconst customTheme = {\n  ...defaultTheme,\n  colors: {\n    ...defaultTheme.colors,\n    primary: '#6200EE',\n    secondary: '#03DAC6',\n    background: {\n      ...defaultTheme.colors.background,\n      primary: '#FFFFFF',\n      secondary: '#F5F5F5',\n    },\n    text: {\n      ...defaultTheme.colors.text,\n      primary: '#212121',\n      secondary: '#757575',\n    },\n  },\n  typography: {\n    ...defaultTheme.typography,\n    fontFamily: {\n      regular: 'Poppins-Regular',\n      bold: 'Poppins-Bold',\n      light: 'Poppins-Light',\n      medium: 'Poppins-Medium',\n    },\n  },\n  spacing: {\n    ...defaultTheme.spacing,\n    xs: 8,\n    sm: 12,\n    md: 16,\n    lg: 24,\n  },\n  borders: {\n    ...defaultTheme.borders,\n    radius: {\n      ...defaultTheme.borders.radius,\n      sm: 4,\n      md: 8,\n      lg: 12,\n    },\n  },\n};\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={customTheme}>\n      {/* Seu aplicativo aqui */}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"refer\xeancia-completa-do-tema",children:"Refer\xeancia Completa do Tema"}),"\n",(0,s.jsxs)(n.p,{children:["Consulte a ",(0,s.jsx)(n.a,{href:"/docs/components/button",children:"Documenta\xe7\xe3o de Componentes"})," para obter informa\xe7\xf5es detalhadas sobre como cada componente utiliza o tema."]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}}}]);